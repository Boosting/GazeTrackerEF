<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yFiles for Java 2.10-->
  <key for="graphml" id="d0" yfiles.type="resources"/>
  <key for="port" id="d1" yfiles.type="portgraphics"/>
  <key for="port" id="d2" yfiles.type="portgeometry"/>
  <key for="port" id="d3" yfiles.type="portuserdata"/>
  <key attr.name="url" attr.type="string" for="node" id="d4"/>
  <key attr.name="description" attr.type="string" for="node" id="d5"/>
  <key for="node" id="d6" yfiles.type="nodegraphics"/>
  <key attr.name="Description" attr.type="string" for="graph" id="d7"/>
  <key attr.name="url" attr.type="string" for="edge" id="d8"/>
  <key attr.name="description" attr.type="string" for="edge" id="d9"/>
  <key for="edge" id="d10" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <data key="d7"/>
    <node id="n0">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="118.13928682812343" width="225.84397040766044" x="755.8696343860731" y="387.5367580968591"/>
          <y:Fill color="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#C0C0C0" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="16" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="46.25" modelName="custom" textColor="#000000" visible="true" width="225.84397040766044" x="0.0" y="35.944643414061716">Генерация EyeTracker.cs
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n1">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d5"><![CDATA[CODE_JAVA]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="596.7188305619104" y="414.3384724337716"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="143.91015625" x="-43.67499923706055" y="68.53585815429688">Генерация EyeTracker.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n2">
      <data key="d4"><![CDATA[SI_BEG]]></data>
      <data key="d5"><![CDATA[// <copyright file="DetectionManager.cs" company="Gazegroup">
// ******************************************************
// GazeTrackingLibrary for ITU GazeTracker
// Copyright (C) 2010 GazeGroup
// ------------------------------------------------------------------------
// This program is free software; you can redistribute it and/or modify it 
// under the terms of the GNU General Public License as published by the 
// Free Software Foundation; either version 3 of the License, 
// or (at your option) any later version.
// This program is distributed in the hope that it will be useful, 
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
// General Public License for more details.
// You should have received a copy of the GNU General Public License 
// along with this program; if not, see http://www.gnu.org/licenses/.
// **************************************************************
// </copyright>
// <author>Martin Tall</author>
// <email>info@martintall.com</email>
// <modifiedby>Alastair Jeremy</modifiedby>

using System;
using System.Drawing;
using System.Reflection;
using Emgu.CV;
using Emgu.CV.CvEnum;
using Emgu.CV.Structure;
using GazeTrackingLibrary.Logging;
using GTCommons.Enum;
using GTSettings;
using GazeTrackingLibrary.Utils;
using log4net;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.internalStorage">
          <y:Geometry height="55.804717792552765" width="167.39241346185827" x="541.3027027189212" y="530.7304842173403"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="42.021484375" x="62.685464543429134" y="18.551772958776382">usings <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n3">
      <data key="d4"><![CDATA[WR_RES_FILE]]></data>
      <data key="d5"><![CDATA[GazeTrackingLibrary\Detection\Eye\EyeTracker.cs]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.dataBase">
          <y:Geometry height="64.53585815429688" width="148.682197954262" x="752.2996474722615" y="521.9993438555962"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="custom" textColor="#000000" visible="true" width="148.682197954262" x="0.0" y="6.6273040771484375">Записать в файл GazeTrackingLibrary\Detection\Eye\EyeTracker.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n4">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[        #region Constructor

        public Eyetracker()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="865.9099120545907" y="782.993664731733"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">конструктор Eyetracker<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n5">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            try
            {
                if (haarCascade == null)
                    haarCascade = new HaarCascade(Settings.Instance.Eyetracker.HaarCascadePath);

                isReady = true;
            }
            catch (Exception ex)
            {
                ErrorLogger.ProcessException(ex, true);
            }
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="882.5342546046013" y="856.9289643008113"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">чтение параметров каскадов Хаара<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n6">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

        #endregion

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="950.1062193154485" y="916.9289643008113"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389487"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n7">
      <data key="d4"><![CDATA[SI_END]]></data>
      <data key="d5"><![CDATA[
// конец файла

]]></data>
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="40.0" width="50.0" x="1507.8972919315274" y="933.6857473235226"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="23.0" y="18.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:Shape type="triangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n8">
      <data key="d6">
        <y:GenericNode configuration="com.yworks.bpmn.Event.withShadow">
          <y:Geometry height="30.0" width="30.0" x="771.4590317064349" y="2181.009810298958"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000" transparent="false"/>
          <y:BorderStyle color="#27AE27" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="13.0" y="34.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="com.yworks.yfiles.bpmn.view.BPMNTypeEnum" name="com.yworks.bpmn.type" value="EVENT_TYPE_ERROR"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.line.color" value="#000000"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill" value="#ffffff"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill2" value="#d4d4d4"/>
            <y:Property class="com.yworks.yfiles.bpmn.view.EventCharEnum" name="com.yworks.bpmn.characteristic" value="EVENT_CHARACTERISTIC_START_EVENT_SUB_PROCESS_INTERRUPTING"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n9">
      <data key="d6">
        <y:GenericNode configuration="com.yworks.bpmn.Event.withShadow">
          <y:Geometry height="30.0" width="30.0" x="771.4590317064367" y="1988.0357193896953"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000" transparent="false"/>
          <y:BorderStyle color="#27AE27" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="13.0" y="34.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="com.yworks.yfiles.bpmn.view.BPMNTypeEnum" name="com.yworks.bpmn.type" value="EVENT_TYPE_ERROR"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.line.color" value="#000000"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill" value="#ffffff"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill2" value="#d4d4d4"/>
            <y:Property class="com.yworks.yfiles.bpmn.view.EventCharEnum" name="com.yworks.bpmn.characteristic" value="EVENT_CHARACTERISTIC_START_EVENT_SUB_PROCESS_INTERRUPTING"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n10">
      <data key="d6">
        <y:GenericNode configuration="com.yworks.bpmn.Event.withShadow">
          <y:Geometry height="30.0" width="30.0" x="771.4590317064367" y="2478.618230233198"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000" transparent="false"/>
          <y:BorderStyle color="#27AE27" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="13.0" y="34.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="com.yworks.yfiles.bpmn.view.BPMNTypeEnum" name="com.yworks.bpmn.type" value="EVENT_TYPE_ERROR"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.line.color" value="#000000"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill" value="#ffffff"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill2" value="#d4d4d4"/>
            <y:Property class="com.yworks.yfiles.bpmn.view.EventCharEnum" name="com.yworks.bpmn.characteristic" value="EVENT_CHARACTERISTIC_START_EVENT_SUB_PROCESS_INTERRUPTING"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n11">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[namespace GazeTrackingLibrary.Detection.Eye
{
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="599.3064645510758" width="69.0163836393408" x="708.6951161807795" y="622.7671533319967"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="599.3064645510758" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace GazeTrackingLibrary.Detection.Eye<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n12">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="594.218041000247" width="69.0163836393408" x="1368.58678201049" y="622.7671533319967"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="594.218041000247" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace GazeTrackingLibrary.Calibration<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n13">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[
--------------------------------------------------------------------------------
--Выполнение процедур проверок одной записи для справочника
-- Исключения: выбрасывает исключение в случае ошибки
-- Параметры:
--------------------------------------------------------------------------------
FUNCTION do_check_procedures(
    p_info_source IN VARCHAR2
    , p_dict_key IN VARCHAR2
    , p_oper_type IN VARCHAR2
    , p_fn_sv IN crc_corr.fn_sv_table
    , p_id_cor IN NUMBER) RETURN integer
AS
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="64.53585815429688" width="200.0" x="84.37761938062943" y="1042.7810341955728"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="64.53585815429688" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">Выполнение процедур проверок одной записи для справочника
--------------------------------
do_check_procedures<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n14">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[		  l_sql varchar2(4000) :='';
      l_str varchar2(4000) :='';
      l_ret integer;
      l_param_str varchar2(4000) :='';
      l_msg_param_str varchar2(32000) :='';
      l_msg_str varchar2(4000) :='';
      l_check  varchar2(4000) :='';
      l_result_table_name varchar2(255);
      l_base_table_name varchar2(255);
      l_mat_view_name varchar2(255);
      l_alias_name  varchar2(255);
  	]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="101.00196193064005" y="1116.7163337646512"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="129.208984375" x="18.771165262488694" y="5.6494140625">описание переменных<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n15">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[END;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="38.21516843515997" x="165.27003516304705" y="2946.76890373112"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="38.21516843515997" x="0.0" y="4.411899941061165"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n16">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[    for i in 1 .. p_fn_sv.count loop
      if(p_fn_sv(i).str_value is not null) then
          l_param_str := l_param_str ||p_fn_sv(i).field_name||'=>'
            ||NVL(p_fn_sv(i).str_value,'NULL')||' ';  

        l_alias_name := '';
        begin
          select a.ALIAS_COL_NAME into l_alias_name from DFS_RAW.CRC_REV_COL_ALIAS a 
            where 
              UPPER(a.user_owner||'.'||a.TABLE_NAME) = UPPER(l_mat_view_name)
              and a.FULL_COL_NAME = UPPER(p_fn_sv(i).field_name);
          exception when NO_DATA_FOUND THEN
            l_alias_name := '<НЕТ АЛИАСА>';
          end; 
        
          l_msg_param_str := l_msg_param_str || l_alias_name ||'('||p_fn_sv(i).field_name||')='
             ||NVL(p_fn_sv(i).str_value,'NULL')||' ';  
      end if; 
    end loop;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064005" y="1236.08848807715"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">формируем строку параметров</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n17">
      <data key="d4"><![CDATA[FOR_BEG]]></data>
      <data key="d5"><![CDATA[  for rec in (select id_check_func, func_name, proc_or_func 
    from crc_check_functions 
      where UPPER(dict_key) = UPPER(p_dict_key)
      and(UPPER(is_active) = 'Y' or is_active is null)
      )
    loop
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimit">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171963" y="1417.5557637576899"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="35.0" modelName="custom" textColor="#000000" visible="true" width="274.61269165781823" x="0.0" y="0.0">по активным проверочным фнкциям с ключом p_dict_key<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n18">
      <data key="d4"><![CDATA[FOR_BEG]]></data>
      <data key="d5"><![CDATA[    for rec2 in (select param_name, data_field_name 
      from crc_check_func_params where id_check_func = rec.id_check_func)
      loop
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimit">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171963" y="1524.4453193574382"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="190.41015625" x="42.101267703909116" y="8.1494140625">по параметрам текущей функции<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n19">
      <data key="d4"><![CDATA[FOR_END]]></data>
      <data key="d5"><![CDATA[end loop; --по активным проверочным фнкциям ]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimitEnd">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171872" y="2645.3139663217667"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="210.578125" x="32.017283328909116" y="8.1494140625">по активным проверочным фнкциям <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n20">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[l_param_str := null;]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064096" y="1467.1184825215241"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">чистим строку параметров</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n21">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[rec2.data_field_name is not null]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527347" y="1573.9355449016393"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="10.502011089050256">Есть параметр? </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n22">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.1346173915714" y="1961.5266550249535"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741562">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n23">
      <data key="d4"><![CDATA[FOR_BEG]]></data>
      <data key="d5"><![CDATA[        for i in 1 .. p_fn_sv.count loop

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimit">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171963" y="1636.7648584316967"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="117.197265625" x="78.70771301640912" y="8.1494140625">по входным данным<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n24">
      <data key="d4"><![CDATA[FOR_END]]></data>
      <data key="d5"><![CDATA[end loop; --по входным данным]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimitEnd">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171963" y="1911.8876356959217"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="117.197265625" x="78.70771301640912" y="8.1494140625">по входным данным<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n25">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[UPPER(rec2.data_field_name ) = UPPER(p_fn_sv(i).field_name)]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527347" y="1689.8005124829733"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="2.9551360890502565">имя данных совпадает с именем параметра? </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n26">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.1346173915714" y="1887.7431257112485"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741562">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n27">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[l_param_str is null]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527347" y="1748.9450224676466"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="10.502011089050256">первый параметр? </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n28">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.1346173915714" y="1865.5025634232543"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741562">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n29">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[l_param_str := rec2.param_name||'=>'''||NVL(p_fn_sv(i).str_value||'''','NULL');  ]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064005" y="1808.0895324523199"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">добавляем параметр</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n30">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[l_param_str := l_param_str||','||rec2.param_name||'=>'''||NVL(p_fn_sv(i).str_value||'''','NULL');  ]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="283.94123026598356" y="1808.0895324523199"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">добавляем параметр с запятой</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n31">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[    if(l_param_str is not null) then
      l_param_str := '('||l_param_str||')';
    else 
      l_param_str := '';
    end if;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064005" y="2034.8535751551617"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">если есть параметры добавляем скобки</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n32">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[    l_check := rec.func_name||l_param_str;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064005" y="2086.4409727528428"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">составляем функцию</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n33">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[rec.proc_or_func is null or rec.proc_or_func = 'F']]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527347" y="2167.5885466109476"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="10.50201108905003">тип не указан или функция? </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n34">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.1346173915714" y="2280.3624286907525"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741789">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n35">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        l_sql := 'select '||l_check||' into :l_ret from dual';
        -- crc_logger.writeDebugDetail(' --- sql: '|| l_sql,'line:' || $$plsql_line||' program:'|| $$plsql_unit); 
        execute immediate l_sql into l_ret;  
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="101.00196193064005" y="2230.2560215888952"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">выполняем функцию</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n36">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        l_sql := 'begin '||l_check||'; end;';
       -- crc_logger.writeDebugDetail(' --- sql: '|| l_sql,'line:' || $$plsql_line||' program:'|| $$plsql_unit); 
        execute immediate l_sql;  
        l_ret := 1;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="38.02722133725729" width="166.7513148999774" x="283.94123026598356" y="2230.2560215888943"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="38.02722133725729" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">выполняем процедуру</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n37">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[begin]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimit">
          <y:Geometry height="16.0" width="232.54674251401957" x="68.10424812361873" y="2138.028370350524"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="17.330078125" x="107.60833219450979" y="-1.3505859375">try<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n38">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[    end;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimitEnd">
          <y:Geometry height="16.0" width="232.54674251401957" x="68.10424812361964" y="2428.1385090452814"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="27.35546875" x="102.59563688200979" y="-1.3505859375">end;<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n39">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[l_ret < 0]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527347" y="2455.7968428727577"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="10.502011089050484">вернулась ошибка? </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n40">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.1346173915714" y="2623.4466143852533"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741789">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n41">
      <data key="d4"><![CDATA[OUTPUT]]></data>
      <data key="d5"><![CDATA[      crc_logger.writeDebugDetail('Проверка '||l_check||' выполнена.','line:' || $$plsql_line||' program:'|| $$plsql_unit); 
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.userMessage">
          <y:Geometry height="40.0" width="190.45178635413959" x="425.6862269868849" y="2543.161674606471"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="190.45178635413959" x="0.0" y="0.0">DEBUG Проверка '||l_check||' выполнена<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n42">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[l_msg_str := ]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="21.048886089050256" width="170.0" x="99.37761938062852" y="1289.4560693666008"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="175.12890625" x="-2.564453125" y="1.1738571070250146">формируем строку сообщения<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n43">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[   'Выполнение процедур проверок. Параметры:'||CHR(13)||l_msg_param_str;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="22.781123654331395" width="170.0" x="99.37761938062852" y="1310.5049554556508"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="22.781123654331395" modelName="custom" textColor="#000000" visible="true" width="170.0" x="0.0" y="-2.2737367544323206E-13">ключ, операция, список параметров<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n44">
      <data key="d4"><![CDATA[OUTPUT]]></data>
      <data key="d5"><![CDATA[    crc_logger.writeDebugDetail(l_msg_str,'line:' || $$plsql_line||' program:'|| $$plsql_unit);
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.userMessage">
          <y:Geometry height="40.0" width="190.45178635413959" x="89.15172620355918" y="1351.8253303285833"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="190.45178635413959" x="0.0" y="0.0">DEBUG Выполнение процедур проверок...<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n45">
      <data key="d4"><![CDATA[FOR_END]]></data>
      <data key="d5"><![CDATA[end loop; --по параметрам  ]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimitEnd">
          <y:Geometry height="35.0" width="274.61269165781823" x="47.07127355171963" y="1985.5357193896953"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="89.04296875" x="92.78486145390912" y="8.1494140625">по параметрам<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n46">
      <data key="d6">
        <y:GenericNode configuration="com.yworks.bpmn.Event.withShadow">
          <y:Geometry height="30.0" width="30.0" x="274.8760917572996" y="1017.7265949032143"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000" transparent="false"/>
          <y:BorderStyle color="#27AE27" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="13.0" y="34.000000000000114">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="com.yworks.yfiles.bpmn.view.BPMNTypeEnum" name="com.yworks.bpmn.type" value="EVENT_TYPE_ERROR"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.line.color" value="#000000"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill" value="#ffffff"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill2" value="#d4d4d4"/>
            <y:Property class="com.yworks.yfiles.bpmn.view.EventCharEnum" name="com.yworks.bpmn.characteristic" value="EVENT_CHARACTERISTIC_START_EVENT_SUB_PROCESS_INTERRUPTING"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n47">
      <data key="d4"><![CDATA[OUTPUT]]></data>
      <data key="d5"><![CDATA[      l_str := 'Не выполнена проверка: '|| l_check||CHR(13) ||l_msg_str;
      crc_logger.writeErrorDetail(l_str,'line:' || $$plsql_line||' program:'|| $$plsql_unit); 
      crc_corr.writeConflict(p_id_cor,p_info_source,p_dict_key,l_str,'Y');
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.userMessage">
          <y:Geometry height="29.917549882122103" width="190.45178635413959" x="89.15172620355736" y="2525.198556265662"/>
          <y:Fill color="#FFFF00" color2="#FF000072" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="29.917549882122103" modelName="custom" textColor="#000000" visible="true" width="190.45178635413959" x="0.0" y="2.2737367544323206E-13">CONFLICT,ERROR<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n48">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      exception when others then]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.data">
          <y:Geometry height="16.0" width="232.54674251401957" x="68.10424812361873" y="2300.459743184836"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="32.681640625" x="99.93255094450979" y="-1.3505859375">catch<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n49">
      <data key="d4"><![CDATA[OUTPUT]]></data>
      <data key="d5"><![CDATA[      l_str :=  crc_constants.getMsg(crc_constants.crc_err_call_check_func)||' '|| l_check||CHR(13) ||l_msg_str ||CHR(13) ||DBMS_UTILITY.FORMAT_ERROR_STACK();
      crc_logger.writeErrorDetail(l_str,'line:' || $$plsql_line||' program:'|| $$plsql_unit); 
      crc_corr.writeConflict(p_id_cor,p_info_source,p_dict_key,l_str,'Y');
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.userMessage">
          <y:Geometry height="29.917549882122103" width="190.45178635413959" x="89.15172620355918" y="2332.2244653563985"/>
          <y:Fill color="#FFFF00" color2="#FF000072" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="29.917549882122103" modelName="custom" textColor="#000000" visible="true" width="190.45178635413959" x="0.0" y="2.2737367544323206E-13">CONFLICT,ERROR<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n50">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      RAISE_APPLICATION_ERROR
        (
          crc_constants.crc_err_call_check_func, l_str
        );    
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="40.0" width="166.75131489997602" x="101.00196193064096" y="2372.906737410084"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000B2" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="166.75131489997602" x="4.0" y="4.0">выбрасываем исключение crc_err_call_check_func</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n51">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      RAISE_APPLICATION_ERROR
        (
          l_ret, l_str
        );    
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="40.0" width="166.75131489997602" x="101.00196193063823" y="2570.880828319347"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000B2" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="166.75131489997602" x="4.0" y="4.0">выбрасываем исключение l_ret</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n52">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[   select d.base_table_name, d.result_table_name, d.mat_view_name
      into l_base_table_name,l_result_table_name, l_mat_view_name
      from crc_dictionaries d
                where d.dict_key = p_dict_key;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="101.00196193064005" y="1182.0736178830725"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">получаем имена таблиц<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n53">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[
BEGIN]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.loopLimit">
          <y:Geometry height="16.0" width="339.4230798633398" x="14.666079448958612" y="1156.1157751794326"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="17.330078125" x="161.0465008691699" y="-1.3505859375">try<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n54">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      exception when others then]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.data">
          <y:Geometry height="16.0" width="339.4230798633398" x="14.666079448957703" y="2733.2319105365223"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="32.681640625" x="153.3707196191699" y="-1.3505859375">catch<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n55">
      <data key="d6">
        <y:GenericNode configuration="com.yworks.bpmn.Event.withShadow">
          <y:Geometry height="30.0" width="30.0" x="281.1403262391092" y="2868.489248253587"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000" transparent="false"/>
          <y:BorderStyle color="#27AE27" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="13.0" y="34.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="com.yworks.yfiles.bpmn.view.BPMNTypeEnum" name="com.yworks.bpmn.type" value="EVENT_TYPE_ERROR"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.line.color" value="#000000"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill" value="#ffffff"/>
            <y:Property class="java.awt.Color" name="com.yworks.bpmn.icon.fill2" value="#d4d4d4"/>
            <y:Property class="com.yworks.yfiles.bpmn.view.EventCharEnum" name="com.yworks.bpmn.characteristic" value="EVENT_CHARACTERISTIC_START_EVENT_SUB_PROCESS_INTERRUPTING"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n56">
      <data key="d4"><![CDATA[OUTPUT]]></data>
      <data key="d5"><![CDATA[      l_str :=  crc_constants.getMsg(crc_constants.crc_err_internal_error)||CHR(13) ||SQLERRM||CHR(13) ||DBMS_UTILITY.FORMAT_ERROR_STACK() ||CHR(13) || 'line:' || $$plsql_line||' program:'|| $$plsql_unit;
      crc_logger.writeErrorDetail(l_str,'line:' || $$plsql_line||' program:'|| $$plsql_unit); 
      crc_corr.writeConflict(p_id_cor,p_info_source,p_dict_key,l_str,'Y');
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.userMessage">
          <y:Geometry height="29.917549882122103" width="190.45178635413959" x="303.32026213701886" y="2827.8069761999013"/>
          <y:Fill color="#FFFF00" color2="#FF000072" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="29.917549882122103" modelName="custom" textColor="#000000" visible="true" width="190.45178635413959" x="0.0" y="2.2737367544323206E-13">CONFLICT,ERROR<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n57">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      RAISE_APPLICATION_ERROR
        (
          crc_constants.crc_err_internal_error, l_str
        );    
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="40.0" width="166.75131489997602" x="315.17049786410064" y="2868.489248253587"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000B2" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="166.75131489997602" x="4.0" y="4.0">выбрасываем исключение crc_err_internal_error</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n58">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[  return 1;	

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="95.07119663351546" x="136.84202106387022" y="2689.6788480051277"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="95.07119663351546" x="0.0" y="4.411899941061165">1</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n59">
      <data key="d4"><![CDATA[IF]]></data>
      <data key="d5"><![CDATA[SQLCODE <= -20000 and SQLCODE > -20100]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.preparation">
          <y:Geometry height="42.09777217810051" width="199.1272217707101" x="84.81400849527529" y="2775.0356936388066"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="199.1272217707101" x="0.0" y="2.955136089050484">Исключение из системы корректировок?  </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n60">
      <data key="d4"><![CDATA[EI]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.start2">
          <y:Geometry height="8.01812872948328" width="8.486003978115491" x="180.13461739157322" y="2924.4915361278286"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="2.2430019890577455" y="2.009064364741789">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n61">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[      RAISE_APPLICATION_ERROR
        (
          SQLCODE, SQLERRM
        );    
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="40.0" width="166.75131489997602" x="101.00196193064005" y="2868.489248253587"/>
          <y:Fill color="#FFFFFFE6" color2="#FF0000B2" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="internal" modelPosition="tl" textColor="#000000" visible="true" width="166.75131489997602" x="4.0" y="4.0">выбрасываем исключение SQLCODE</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n62">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[null;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="22.781123654331623" width="114.99326455113214" x="338.21961027733016" y="2513.4051297279057"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="70.50390625" x="22.24467915056607" y="2.039975889665584">пустой блок<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n63">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[public class Eyetracker
    {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="62.0163836393408" x="796.4614998201203" y="627.8555768828255"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="62.0163836393408" x="0.0" y="-2.8421709430404007E-14">class Eyetracker<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n64">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="69.0163836393408" x="1284.5703983711494" y="622.7671533319967"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="-2.8421709430404007E-14">class Eyetracker<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n65">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Fields

        /// <summary>
        /// Logger for log4net logging
        /// </summary>
        private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);

        /// <summary>
        /// Indicator that can be used for high speed DEBUG level logging. Note that using this flag will prevent automated reload
        /// of log4net configuration for that log statement during program operation
        /// </summary>
        private static readonly bool isDebugEnabled = log.IsDebugEnabled;

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="882.5342546046013" y="685.818100518609"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="79.375" x="43.688157449988694" y="5.6494140625">#region Fields<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n66">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Variables

        private HaarCascade haarCascade;
        private bool foundLeft;
        private bool foundRight;
        private bool isReady;

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="882.5342546046013" y="732.8085597189973"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="97.392578125" x="34.679368387488694" y="5.6494140625">#region Variables<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n67">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Events

        #region Delegates

        public delegate void AutoTunedEventHandler(bool success);

        #endregion

        public event AutoTunedEventHandler OnAutoTuneCompleted;

        #endregion

        #region Public methods

        public bool DetectEyes(Image<Gray, byte> gray, TrackData trackData)
        {
            bool eyesFound = DoEyeRegionExtraction(gray, trackData);
            return eyesFound;
        }

        #endregion

        #region Private methods

        private bool DoEyeRegionExtraction(Image<Gray, byte> gray, TrackData trackData)
        {
            foundLeft = false;
            foundRight = false;

            // Run classifier 
            MCvAvgComp[][] eyesDetected = gray.DetectHaarCascade(
                haarCascade,
                Settings.Instance.Eyetracker.ScaleFactor,
                2, //Min Neighbours (how many nodes should return overlapping hits, eg. reduce false detections)
                HAAR_DETECTION_TYPE.DO_CANNY_PRUNING,
                Settings.Instance.Eyetracker.SizeMin);


            // No eyes detected return false
            if (eyesDetected == null || eyesDetected[0] != null && eyesDetected[0].Length == 0)
            {
                if (isDebugEnabled)
                    log.Debug("DoEyeRegionExtraction: No eyes detected from DetectHaarCascade(...) call, returning false");

                return false;
            }

            if (Settings.Instance.Processing.TrackingMode == TrackingModeEnum.Monocular)
            {
                if (eyesDetected[0].Length == 0)
                {
                    if (isDebugEnabled)
                        log.Debug("DoEyeRegionExtraction: Monocular mode returning false because no eyesDetected");

                    return false;
                }

                trackData.LeftROI = eyesDetected[0][0].rect;
                foundLeft = true;
                return true;
            }

            if (Settings.Instance.Processing.TrackingMode == TrackingModeEnum.Binocular)
            {
                // Binocular but didnt find both eyes
                if (eyesDetected[0].Length < 2)
                {
                    if (isDebugEnabled)
                    {
                        log.Debug(
                            "DoEyeRegionExtraction: Binocular mode returning false because eyesDetected[0].Length=" +
                            eyesDetected[0].Length + " which is less than 2");
                    }
                    return false;
                }

                var r1 = new Rectangle();
                var r2 = new Rectangle();

                int minSize = Settings.Instance.Eyetracker.SizeMin.Width;
                int maxSize = Settings.Instance.Eyetracker.SizeMax.Width;

                // more than two, exclude false hit (nose?)
                if (eyesDetected[0].Length > 2)
                {
                    if (isDebugEnabled)
                        log.Debug("DoEyeRegionExtraction: Binocular mode found " + eyesDetected[0].Length + " eyes");

                    // More than two hits, get the best fit by vertial alignment and distances
                    MCvAvgComp[] sortedEyesArray = AlignedROIs(eyesDetected[0]);
                    r1 = sortedEyesArray[0].rect;
                    r2 = sortedEyesArray[1].rect;
                }
                else
                {
                    if (isDebugEnabled)
                        log.Debug("DoEyeRegionExtraction: Binocular mode found exactly two eyes");

                    r1 = eyesDetected[0][0].rect;
                    r2 = eyesDetected[0][1].rect;
                }

                // Assign left/right eye
                if (r1.X < r2.X)
                {
                    trackData.LeftROI = r1;
                    trackData.RightROI = r2;
                }
                else
                {
                    trackData.LeftROI = r2;
                    trackData.RightROI = r1;
                }
                return true;
            }

            return false;

            //Log.Performance.Now.Stamp("Eye: Left X:" + trackData.LeftROI.X + " Y:" + trackData.LeftROI.Y + " W:" + trackData.LeftROI.Width + " H:" + trackData.LeftROI.Height + " Right X:" + trackData.RightROI.X + " Y:" + trackData.RightROI.Y + " W:" + trackData.RightROI.Width + " H:" + trackData.RightROI.Height);
        }

        /// <summary>
        /// This method returns the 2 ROIs that are more "aligned", i.e. with the
        /// lowest difference in the Y coordinate
        /// It calculates the distances between all the ROIs and selects the appropriate pair
        /// </summary>
        /// <param name="ROIs"></param>
        /// <returns></returns>
        private MCvAvgComp[] AlignedROIs(MCvAvgComp[] ROIs)
        {
            MCvAvgComp[] alignedROIs = new MCvAvgComp[2];
            int N = ROIs.Length;
            Matrix<int> distancesY = new Matrix<int>(N, N);
            distancesY = distancesY.Add(100000);
            double minimum;
            double maximum;
            Point minimumLocation;
            Point maximumLocation;

            for (int i = 0; i < N; i++)
            {
                for (int j = i + 1; j < N; j++)
                {
                    // If both rectangles do not intersect, we add their distance to the matrix
                    // MT: Min distance of 2 x roi.width
                    if (ROIs[j].rect.IntersectsWith(ROIs[i].rect) == false && Math.Abs(ROIs[j].rect.X - ROIs[i].rect.X) > ROIs[j].rect.Width*2.5)
                        distancesY[i, j] = Math.Abs(ROIs[j].rect.Y - ROIs[i].rect.Y);
                }
            }

            distancesY.MinMax(out minimum, out maximum, out minimumLocation, out maximumLocation);

            alignedROIs[0] = ROIs[minimumLocation.X];
            alignedROIs[1] = ROIs[minimumLocation.Y];

            return alignedROIs;
        }

        #endregion

        #region Get/Set

        public bool IsReady
        {
            get { return isReady; }
        }

        public bool FoundLeft
        {
            get { return foundLeft; }
        }

        public bool FoundRight
        {
            get { return foundRight; }
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="100.0" width="100.0" x="1116.9279839378642" y="770.2470869795326"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="39.453125">код</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n68">
      <data key="d4"><![CDATA[START_ACTS]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="108.17981202122769" width="189.0429473498143" x="267.189811751397" y="-101.40333068960973"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="14" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.1513671875" modelName="custom" textColor="#000000" visible="true" width="74.8955078125" x="57.073719768657156" y="112.17981202122769">Начать акт<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="false"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="2"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n69">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="463.1355814039275" y="109.86113398158903"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="143.91015625" x="-43.67499923706055" y="68.53585815429688">Генерация EyeTracker.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n70">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="118.13928682812343" width="225.84397040766044" x="3604.9442144263085" y="-1781.5343439959204"/>
          <y:Fill color="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#C0C0C0" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="16" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="66.375" modelName="custom" textColor="#000000" visible="true" width="225.84397040766044" x="0.0" y="25.882143414061716">Генерация CalibrationControl.cs
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n71">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d5"><![CDATA[CODE_JAVA]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="3445.7934106021457" y="-1754.732629659008"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="92.564453125" x="-18.002147674560547" y="68.53585815429688">Генерация ttt.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n72">
      <data key="d4"><![CDATA[SI_BEG]]></data>
      <data key="d5"><![CDATA[using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Windows.Threading;
using GazeTrackerUI.Tools;
using GazeTrackingLibrary.Calibration;
using GazeTrackingLibrary.Logging;
using GazeTrackingLibrary.Utils;
using GTCommons;
using GTCommons.Enum;
using GTSettings;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.internalStorage">
          <y:Geometry height="55.804717792552765" width="167.39241346185827" x="3390.3772827591565" y="-1638.3406178754392"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="42.021484375" x="62.685464543429134" y="18.551772958776382">usings <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n73">
      <data key="d4"><![CDATA[WR_RES_FILE]]></data>
      <data key="d5"><![CDATA[GazeTrackerUI\Calibration.cs]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.dataBase">
          <y:Geometry height="64.53585815429688" width="148.682197954262" x="3601.374227512497" y="-1647.0717582371833"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="custom" textColor="#000000" visible="true" width="148.682197954262" x="0.0" y="6.6273040771484375">Записать в файл GazeTrackerUI\Calibration.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n74">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[    #region Includes
    #endregion

    public partial class CalibrationControl : UserControl
    {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="3714.9844920948262" y="-1386.0774373610466"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">конструктор CalibrationWindow<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n75">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="1235.702932740831" y="-33.59571778588327"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n76">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

        #endregion

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="3799.180799355684" y="-1142.8027946274588"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389203"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n77">
      <data key="d4"><![CDATA[SI_END]]></data>
      <data key="d5"><![CDATA[
// конец файла

]]></data>
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="40.0" width="50.0" x="4937.570867383187" y="-1269.1949282606593"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="23.0" y="18.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:Shape type="triangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n78">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[namespace GazeTrackerUI.CalibrationUI
{
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="599.3064645510758" width="69.0163836393408" x="3557.769696221015" y="-1546.3039487607828"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="599.3064645510758" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace GazeTrackerUI.CalibrationUI
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n79">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="594.218041000247" width="69.0163836393408" x="4838.5544837438465" y="-1546.3039487607828"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="594.218041000247" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n80">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[    #region Includes
    #endregion

    public partial class CalibrationControl : UserControl
    {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="62.0163836393408" x="3645.5360798603556" y="-1541.215525209954"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="62.0163836393408" x="0.0" y="-2.8421709430404007E-14">class CalibrationControl : UserControl<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n81">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="69.0163836393408" x="4754.538100104506" y="-1546.3039487607828"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="-2.8421709430404007E-14">class<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n82">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Variables

        private double _acceleration = 0.4;
        private double _avgSumStdDev;
        private SolidColorBrush _colorBackground;
        private SolidColorBrush _colorPoints;
        private double _deacceleration = 0.6;
        private double _pointDuration = 100;
        private double _pointTransitionDuration = 1000;
        private bool _randomOrder = true;
        private bool calibrationCompleted;
        private List<CalibrationPoint> calibrationPoints = new List<CalibrationPoint>();
        private CalibrationPoint currentPoint;
        private CalibrationPoint fakePoint;
        private int indexInstancePoint;
        private bool isRecalibratingPoint;
        private bool isRunning;
        private CalibrationPoint nextPoint;
        private int numberOfPoints = 9;

        private double pointDiameter = 45;

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="3731.608834644837" y="-1474.9475069452108"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="97.392578125" x="34.679368387488694" y="5.6494140625">#region Variables<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n83">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        public void Stop()
        {
            calibrationControl.Stop();
        }

        public void Reset()
        {
            instance = new CalibrationWindow();
        }

        public void Recalibrate()
        {
            calibrationControl.CanvasCalibration.Background = calibrationControl.ColorBackground;
            calibrationMenu.Visibility = Visibility.Collapsed;
            calibrationControl.Reset();
            calibrationControl.Start();
        }

        #endregion


        #region OnEvents

        #region OnEvents from CalibrationControl / Tracker

        private void calibrationControl_Start(object sender, RoutedEventArgs e)
        {
            // Notify tracker that calibration starts
            Tracker.Instance.CalibrationStart();
        }

        private void calibrationControl_PointStart(object sender, RoutedEventArgs e)
        {
            var control = sender as CalibrationControl;
            // Notify tracker that a point is displayed (start sampling)

            if (control != null)
                Tracker.Instance.CalibrationPointStart(control.CurrentPoint.Number, calibrationControl.AdjustPointFromPartialCalibration(calibrationControl.CurrentPoint.Point)); // Convert point to absolute screen pos.
        }

        private void calibrationControl_PointEnd(object sender, RoutedEventArgs e)
        {
            var control = sender as CalibrationControl;

            //// Notify tracker that a point has been displayed (stop sampling)
            if (control == null) return;

            Tracker.Instance.CalibrationPointEnd();

            if (!control.IsRecalibratingPoint) return;

            calibrationControl_End(null, null);
            control.IsRecalibratingPoint = false;
        }

        private void calibrationControl_End(object sender, RoutedEventArgs e)
        {
            try
            {
                // Notify tracker that calibration has ended, it will raise an event when calculations are done
                Tracker.Instance.OnCalibrationComplete += Tracker_OnCalibrationCompleted;
                Tracker.Instance.CalibrationEnd();
            }
            catch (Exception ex)
            {
                ErrorLogger.ProcessException(ex, false);
            }
        }

        private void Tracker_OnCalibrationCompleted(object sender, EventArgs e)
        {
            //if (!tracker.Calibration.IsCalibrated)
            //{
            //    MessageWindow msgWin = new MessageWindow();
            //    msgWin.Text = "Calibration unsuccessful. Not enough images could be captured during the calibration. Try to calibrate again.";
            //    msgWin.Show();
            //    msgWin.Closed += new EventHandler(errorMsgWin_Closed);
            //    return;
            //}

            if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
                visualPoint.Visibility = Visibility.Visible;

            // Unregister event
            Tracker.Instance.OnCalibrationComplete -= Tracker_OnCalibrationCompleted;

            // Draw feedback on calibration points and the tracker.calibrationTargets overlaid
            BitmapSource calibrationResult =
                calibrationControl.VisualizeCalibrationResults(Tracker.Instance.Calibration.CalibMethod.CalibrationTargets);

            // Generate indicator of calibration quality (1-5 star)
            calibrationMenu.GenerateQualityIndicator(Tracker.Instance.Calibration.CalibMethod.Degrees);
            calibrationMenu.SetAccuracy(
                Tracker.Instance.Calibration.CalibMethod.DegreesLeft,
                Tracker.Instance.Calibration.CalibMethod.DegreesRight);

            if (ExportCalibrationResults)
            {
                // Send event
                GTCommands.Instance.Calibration.ExportResults(calibrationResult, calibrationMenu.ratingCalibrationQuality.RatingValue);
            }
            else
            {
                // Show menu to accept or recalibrate
                calibrationMenu.Visibility = Visibility.Visible;

                if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
                {
                    CanvasRoot.Children.Remove(visualPoint);
                    ToggleCrosshair(null, null);
                }
            }
        }

        #endregion


        #region Events - StopOnEscape or ErrorMsgWin Close

        private void Calibration_KeyDown(object sender, KeyEventArgs e)
        {
            // Exit on Escape-key
            if (e.Key.Equals(Key.Escape))
            {
                calibrationControl.Stop();
                Tracker.Instance.CalibrationAbort();
                Close();

            }
        }

        private void errorMsgWin_Closed(object sender, EventArgs e)
        {
            Close();
        }

        #endregion


        #region Calibration menu events (accept/redo/share)

        private void RedoCalibration(object sender, RoutedEventArgs e)
        {
            visualPoint.Visibility = Visibility.Collapsed;
            Recalibrate();
        }

        private void AcceptCalibration(object sender, RoutedEventArgs e)
        {
            // Hide UI
            calibrationMenu.Visibility = Visibility.Collapsed;
            this.visualPoint.Visibility = Visibility.Collapsed;

            // Grab screenshot
            string savePath =
                GTPath.GetLocalApplicationDataPath()
                + Path.DirectorySeparatorChar
                + "Calibration"
                + Path.DirectorySeparatorChar
                + Tracker.Instance.Calibration.ID
                + Path.DirectorySeparatorChar
                + "calibrationScreen.png";
            SaveImage(savePath, CanvasRoot.GetScreenShot(1));

            // Dump Instance settings into the calibration folder
            FileInfo fileSettings = new FileInfo(Settings.Instance.FileSettings.SettingsDirectory + Settings.Instance.GetLatestConfigurationFile());

            try
            {
                File.Copy(fileSettings.FullName, Tracker.Instance.Calibration.DataFolder + "\\" + fileSettings.Name);
            }
            catch (Exception ex)
            {
                Console.Out.WriteLine("Error dumping calibration data in CalibrationWindow.AcceptCalibration(), message: " + ex.Message);
            }

            // Trigger global calibration accept (will hide this)
            GTCommands.Instance.Calibration.Accept();
        }

        private void ShareData(object sender, RoutedEventArgs e)
        {
            calibrationMenu.Visibility = Visibility.Collapsed;
            sharingUC.SendData(Tracker.Instance, CanvasRoot.GetScreenShot(1));
            sharingUC.Visibility = Visibility.Visible;
        }

        private static void SaveImage(string file, BitmapSource bmpScr)
        {
            if (file == "") return;

            try
            {
                FileStream fileStream = new FileStream(file, FileMode.Create);

                JpegBitmapEncoder encoder = new JpegBitmapEncoder();
                encoder.Frames.Add(BitmapFrame.Create(bmpScr));
                encoder.QualityLevel = 100;
                encoder.Save(fileStream);
                fileStream.Close();
                fileStream.Dispose();
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: " + e.Message);
            }
        }
        private void sharingUC_OnDataSent(object sender, RoutedEventArgs e)
        {
            sharingUC.Visibility = Visibility.Collapsed;
            calibrationMenu.Visibility = Visibility.Visible;
        }

        #endregion


        #endregion


        #region Crosshair - Visual feedback on gaze position

        private void ToggleCrosshair(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
            {
                RegisterForGazeDataEvent();

                // Add crosshair (visual feedback indicator) to canvas
                CanvasRoot.Children.Add(visualPoint);

                Canvas.SetTop(visualPoint, 0);
                Canvas.SetLeft(visualPoint, 0);
                Panel.SetZIndex(visualPoint, 3);
            }
            else
            {
                UnregisterForGazeDataEvent();
                CanvasRoot.Children.Remove(visualPoint);
            }
        }

        private void ToggleSmoothing(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.CheckBoxSmooth.IsChecked.Value)
                Settings.Instance.Processing.EyeMouseSmooth = true;
            else
                Settings.Instance.Processing.EyeMouseSmooth = false;

            UnregisterForGazeDataEvent();
            RegisterForGazeDataEvent();
        }

        private void AccuracyParamsChange(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.DistanceFromScreen != Settings.Instance.Calibration.DistanceFromScreen)
            {
                Settings.Instance.Calibration.DistanceFromScreen = calibrationMenu.DistanceFromScreen;
                double left = Tracker.Instance.Calibration.CalibMethod.CalculateDegreesLeft();  // recalculate
                double right = Tracker.Instance.Calibration.CalibMethod.CalculateDegreesRight(); // recalculate
                calibrationMenu.SetAccuracy(left, right);
            }
        }


        private void RegisterForGazeDataEvent()
        {
            if (Settings.Instance.Processing.EyeMouseSmooth)
                Tracker.Instance.GazeDataSmoothed.GazeDataChanged += GazeDataRaw_OnNewGazeData;
            else
                Tracker.Instance.GazeDataRaw.GazeDataChanged += GazeDataRaw_OnNewGazeData;
        }

        private void UnregisterForGazeDataEvent()
        {
            try
            {
                Tracker.Instance.GazeDataSmoothed.GazeDataChanged -= GazeDataRaw_OnNewGazeData;
                Tracker.Instance.GazeDataRaw.GazeDataChanged -= GazeDataRaw_OnNewGazeData;
            }
            catch (Exception ex)
            {
            }
        }

        private void GazeDataRaw_OnNewGazeData(double x, double y)
        {
            // On new data move the cross-hair
            CanvasRoot.Dispatcher.BeginInvoke
                (
                    DispatcherPriority.Normal,
                    new Action
                        (
                        delegate
                        {
                            if (x < 0 || y < 0) return;
                            Canvas.SetTop(visualPoint, y - visualPoint.Height / 2);
                            Canvas.SetLeft(visualPoint, x - visualPoint.Width / 2);
                        }
                        )
                );
        }

        #endregion


        #region Set/Get

        public static CalibrationWindow Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new CalibrationWindow();
                }

                return instance;
            }
        }

        public CalibrationPoint CurrentPoint
        {
            get { return calibrationControl.CurrentPoint; }
        }

        public GTGazeData GazeDataRaw { get; set; }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="100.0" width="100.0" x="4586.895685671221" y="-1398.8240151132468"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="39.453125">код</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n84">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            //this.DataContext = TrackingScreen.TrackingScreenBounds;
            InitializeComponent();
            visualPoint = new VisualGazePoint();

            // Get tracking-screen size
            Left = TrackingScreen.TrackingScreenLeft;
            Top = TrackingScreen.TrackingScreenTop;
            Width = TrackingScreen.TrackingScreenWidth;
            Height = TrackingScreen.TrackingScreenHeight;

            ExportCalibrationResults = false;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="64.46714365291007" width="166.7513148999774" x="1235.7029327408313" y="-202.15942058683225"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="6.592946826455034">Инициализируем компоненты, выставляем размер экрана</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n85">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            // Hide menues and stuff
            calibrationMenu.Visibility = Visibility.Collapsed;
            sharingUC.Visibility = Visibility.Collapsed;

            calibrationMenu.OnAccept += AcceptCalibration;
            calibrationMenu.OnShare += ShareData;
            calibrationMenu.OnRecalibrate += RedoCalibration;
            calibrationMenu.OnToggleCrosshair += ToggleCrosshair;
            calibrationMenu.OnToggleSmoothing += ToggleSmoothing;
            calibrationMenu.OnAccuracyParamsChange += AccuracyParamsChange;

            sharingUC.OnDataSent += sharingUC_OnDataSent;

            KeyDown += Calibration_KeyDown;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="64.46714365291007" width="166.7513148999774" x="1235.7029327408313" y="-117.87756918635773"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="6.592946826455091">скрываем меню, настраиваем обработчики событий</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n86">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[       #region Public Start/Stop/Reset/Recalibrate

        public void Start()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="3944.9844920948262" y="-1386.0774373610466"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">Start()<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n87">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="4029.180799355684" y="-1077.6709207034019"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389487"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n88">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            CanvasRoot.Width = Width; // Tracking screen width
            CanvasRoot.Height = Height;

            // Partial calibration if not zero or not full screen, set active calibration area by applying margin to the control. 
            if (GTSettings.Settings.Instance.Calibration.AreaWidth != 0 &&
                Settings.Instance.Calibration.AreaHeight != 0 &&
                Settings.Instance.Calibration.AreaWidth != Width &&
                Settings.Instance.Calibration.AreaHeight != Height)
            {
                calibrationControl.Width = Settings.Instance.Calibration.AreaWidth;
                calibrationControl.Height = Settings.Instance.Calibration.AreaHeight;

                // Align the calibration control (center)
                if (Settings.Instance.Calibration.CalibrationAlignment == CalibrationAlignmentEnum.Center)
                {
                    Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                    Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                }
                else
                {
                    // Align left/right, top, bottom
                    switch (Settings.Instance.Calibration.CalibrationAlignment)
                    {
                        case CalibrationAlignmentEnum.Top:
                            Canvas.SetTop(calibrationControl, 0);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Bottom:
                            Canvas.SetTop(calibrationControl, CanvasRoot.Height - calibrationControl.Height);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Left:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, 0);
                            break;
                        case CalibrationAlignmentEnum.Right:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, CanvasRoot.Width - calibrationControl.Width);
                            break;
                    }
                }
            }
            else
            {
                calibrationControl.Width = Width;
                calibrationControl.Height = Height;
                Canvas.SetTop(calibrationControl, 0);
                Canvas.SetLeft(calibrationControl, 0);
            }

            // Initialize calibration control and settings
            calibrationControl.NumberOfPoints = Settings.Instance.Calibration.NumberOfPoints;
            calibrationControl.RandomOrder = Settings.Instance.Calibration.RandomizePointOrder;
            calibrationControl.ColorPoints = Settings.Instance.Calibration.PointColor;
            calibrationControl.ColorBackground = Settings.Instance.Calibration.BackgroundColor;
            calibrationControl.PointDuration = Settings.Instance.Calibration.PointDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointDuration=" + calibrationControl.PointDuration);
            calibrationControl.PointDuration = 2000.0;

            calibrationControl.PointTransitionDuration = Settings.Instance.Calibration.PointTransitionDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointTransitionDuration=" + calibrationControl.PointTransitionDuration);
            calibrationControl.PointTransitionDuration = 2000.0;

            calibrationControl.PointDiameter = Settings.Instance.Calibration.PointDiameter;
            //erv 
            calibrationControl.PointDiameter = Settings.Instance.Visualization.CalibPointSize;
            Console.WriteLine("--- ERV -- Start() PointDiameter = CalibPointSize" + calibrationControl.PointDiameter);

            calibrationControl.Acceleration = Settings.Instance.Calibration.Acceleration;
            calibrationControl.Acceleration = 0.9;
            Console.WriteLine("--- ERV --- calibrationControl.Acceleration=" + calibrationControl.Acceleration);

            calibrationControl.Deacceleration = Settings.Instance.Calibration.Deacceleration;
            Console.WriteLine("--- ERV --- calibrationControl.Deacceleration=" + calibrationControl.Deacceleration);
            calibrationControl.Deacceleration = 0.9;

            calibrationControl.UseInfantGraphics = Settings.Instance.Calibration.UseInfantGraphics;



            // Register for events
            calibrationControl.OnCalibrationStart += calibrationControl_Start;
            calibrationControl.OnPointStart += calibrationControl_PointStart;
            calibrationControl.OnPointStop += calibrationControl_PointEnd;
            calibrationControl.OnCalibrationEnd += calibrationControl_End;

            this.BringIntoView();
            // Start calibration procedure
            calibrationControl.Start();
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="64.46714365291007" width="166.7513148999774" x="4089.9856059633566" y="-1316.0774373610466"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="21.68669682645509">код</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n89">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d5"><![CDATA[CODE_JAVA]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="615.1880933782613" y="11.467773322589494"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="211.275390625" x="-77.35761642456055" y="68.53585815429688">Генерация CalibrationWindow.xaml.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n90">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="118.13928682812343" width="225.84397040766044" x="1995.3335781715477" y="275.51031649416325"/>
          <y:Fill color="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#C0C0C0" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="16" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="66.375" modelName="custom" textColor="#000000" visible="true" width="225.84397040766044" x="0.0" y="25.882143414061716">Генерация CalibrationWindow.xaml.cs
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n91">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d5"><![CDATA[CODE_JAVA]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="1836.182774347385" y="302.31203083107573"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="211.275390625" x="-77.35761642456055" y="68.53585815429688">Генерация CalibrationWindow.xaml.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n92">
      <data key="d4"><![CDATA[SI_BEG]]></data>
      <data key="d5"><![CDATA[using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Threading;
using GazeTrackerUI.Tools;
using GazeTrackingLibrary;
using GazeTrackingLibrary.Logging;
using GazeTrackingLibrary.Utils;
using GTCommons;
using System.IO;
using GTCommons.Enum;
using GTSettings;
using GTCommons.Events;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.internalStorage">
          <y:Geometry height="55.804717792552765" width="167.39241346185827" x="1780.7666465043958" y="418.70404261464444"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="42.021484375" x="62.685464543429134" y="18.551772958776382">usings <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n93">
      <data key="d4"><![CDATA[WR_RES_FILE]]></data>
      <data key="d5"><![CDATA[GazeTrackerUI\Calibration\CalibrationWindow.xaml.cs]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.dataBase">
          <y:Geometry height="64.53585815429688" width="148.682197954262" x="1991.7635912577362" y="409.9729022529003"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="66.375" modelName="custom" textColor="#000000" visible="true" width="148.682197954262" x="0.0" y="-0.9195709228515625">Записать в файл GazeTrackerUI\Calibration\CalibrationWindow.xaml.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n94">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[        #region Constructor

        public CalibrationWindow()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="2105.3738558400655" y="670.9672231290372"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">конструктор CalibrationWindow<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n95">
      <data key="d4"><![CDATA[SI_END]]></data>
      <data key="d5"><![CDATA[
// конец файла

]]></data>
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="40.0" width="50.0" x="3327.9602311284266" y="787.8497322294244"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="23.0" y="18.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:Shape type="triangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n96">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[namespace GazeTrackerUI.CalibrationUI
{
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="599.3064645510758" width="69.0163836393408" x="1948.159059966254" y="510.74071172930087"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="599.3064645510758" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace GazeTrackerUI.CalibrationUI
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n97">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="594.218041000247" width="69.0163836393408" x="3228.943847489086" y="510.74071172930087"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="594.218041000247" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n98">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[    public partial class CalibrationWindow : Window
    {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="62.0163836393408" x="2035.9254436055949" y="515.8291352801297"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="62.0163836393408" x="0.0" y="-2.8421709430404007E-14">class CalibrationWindow<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n99">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="69.0163836393408" x="3144.9274638497454" y="510.74071172930087"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="-2.8421709430404007E-14">class<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n100">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Variables

        private static CalibrationWindow instance;
        private readonly VisualGazePoint visualPoint;
        private double margin = 100;
        public bool ExportCalibrationResults { get; set; }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="2121.998198390076" y="620.7821181163015"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="97.392578125" x="34.679368387488694" y="5.6494140625">#region Variables<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n101">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        public void Stop()
        {
            calibrationControl.Stop();
        }

        public void Reset()
        {
            instance = new CalibrationWindow();
        }

        public void Recalibrate()
        {
            calibrationControl.CanvasCalibration.Background = calibrationControl.ColorBackground;
            calibrationMenu.Visibility = Visibility.Collapsed;
            calibrationControl.Reset();
            calibrationControl.Start();
        }

        #endregion


        #region OnEvents

        #region OnEvents from CalibrationControl / Tracker

        private void calibrationControl_Start(object sender, RoutedEventArgs e)
        {
            // Notify tracker that calibration starts
            Tracker.Instance.CalibrationStart();
        }

        private void calibrationControl_PointStart(object sender, RoutedEventArgs e)
        {
            var control = sender as CalibrationControl;
            // Notify tracker that a point is displayed (start sampling)

            if (control != null)
                Tracker.Instance.CalibrationPointStart(control.CurrentPoint.Number, calibrationControl.AdjustPointFromPartialCalibration(calibrationControl.CurrentPoint.Point)); // Convert point to absolute screen pos.
        }

        private void calibrationControl_PointEnd(object sender, RoutedEventArgs e)
        {
            var control = sender as CalibrationControl;

            //// Notify tracker that a point has been displayed (stop sampling)
            if (control == null) return;

            Tracker.Instance.CalibrationPointEnd();

            if (!control.IsRecalibratingPoint) return;

            calibrationControl_End(null, null);
            control.IsRecalibratingPoint = false;
        }

        private void calibrationControl_End(object sender, RoutedEventArgs e)
        {
            try
            {
                // Notify tracker that calibration has ended, it will raise an event when calculations are done
                Tracker.Instance.OnCalibrationComplete += Tracker_OnCalibrationCompleted;
                Tracker.Instance.CalibrationEnd();
            }
            catch (Exception ex)
            {
                ErrorLogger.ProcessException(ex, false);
            }
        }

        private void Tracker_OnCalibrationCompleted(object sender, EventArgs e)
        {
            //if (!tracker.Calibration.IsCalibrated)
            //{
            //    MessageWindow msgWin = new MessageWindow();
            //    msgWin.Text = "Calibration unsuccessful. Not enough images could be captured during the calibration. Try to calibrate again.";
            //    msgWin.Show();
            //    msgWin.Closed += new EventHandler(errorMsgWin_Closed);
            //    return;
            //}

            if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
                visualPoint.Visibility = Visibility.Visible;

            // Unregister event
            Tracker.Instance.OnCalibrationComplete -= Tracker_OnCalibrationCompleted;

            // Draw feedback on calibration points and the tracker.calibrationTargets overlaid
            BitmapSource calibrationResult =
                calibrationControl.VisualizeCalibrationResults(Tracker.Instance.Calibration.CalibMethod.CalibrationTargets);

            // Generate indicator of calibration quality (1-5 star)
            calibrationMenu.GenerateQualityIndicator(Tracker.Instance.Calibration.CalibMethod.Degrees);
            calibrationMenu.SetAccuracy(
                Tracker.Instance.Calibration.CalibMethod.DegreesLeft,
                Tracker.Instance.Calibration.CalibMethod.DegreesRight);

            if (ExportCalibrationResults)
            {
                // Send event
                GTCommands.Instance.Calibration.ExportResults(calibrationResult, calibrationMenu.ratingCalibrationQuality.RatingValue);
            }
            else
            {
                // Show menu to accept or recalibrate
                calibrationMenu.Visibility = Visibility.Visible;

                if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
                {
                    CanvasRoot.Children.Remove(visualPoint);
                    ToggleCrosshair(null, null);
                }
            }
        }

        #endregion


        #region Events - StopOnEscape or ErrorMsgWin Close

        private void Calibration_KeyDown(object sender, KeyEventArgs e)
        {
            // Exit on Escape-key
            if (e.Key.Equals(Key.Escape))
            {
                calibrationControl.Stop();
                Tracker.Instance.CalibrationAbort();
                Close();

            }
        }

        private void errorMsgWin_Closed(object sender, EventArgs e)
        {
            Close();
        }

        #endregion


        #region Calibration menu events (accept/redo/share)

        private void RedoCalibration(object sender, RoutedEventArgs e)
        {
            visualPoint.Visibility = Visibility.Collapsed;
            Recalibrate();
        }

        private void AcceptCalibration(object sender, RoutedEventArgs e)
        {
            // Hide UI
            calibrationMenu.Visibility = Visibility.Collapsed;
            this.visualPoint.Visibility = Visibility.Collapsed;

            // Grab screenshot
            string savePath =
                GTPath.GetLocalApplicationDataPath()
                + Path.DirectorySeparatorChar
                + "Calibration"
                + Path.DirectorySeparatorChar
                + Tracker.Instance.Calibration.ID
                + Path.DirectorySeparatorChar
                + "calibrationScreen.png";
            SaveImage(savePath, CanvasRoot.GetScreenShot(1));

            // Dump Instance settings into the calibration folder
            FileInfo fileSettings = new FileInfo(Settings.Instance.FileSettings.SettingsDirectory + Settings.Instance.GetLatestConfigurationFile());

            try
            {
                File.Copy(fileSettings.FullName, Tracker.Instance.Calibration.DataFolder + "\\" + fileSettings.Name);
            }
            catch (Exception ex)
            {
                Console.Out.WriteLine("Error dumping calibration data in CalibrationWindow.AcceptCalibration(), message: " + ex.Message);
            }

            // Trigger global calibration accept (will hide this)
            GTCommands.Instance.Calibration.Accept();
        }

        private void ShareData(object sender, RoutedEventArgs e)
        {
            calibrationMenu.Visibility = Visibility.Collapsed;
            sharingUC.SendData(Tracker.Instance, CanvasRoot.GetScreenShot(1));
            sharingUC.Visibility = Visibility.Visible;
        }

        private static void SaveImage(string file, BitmapSource bmpScr)
        {
            if (file == "") return;

            try
            {
                FileStream fileStream = new FileStream(file, FileMode.Create);

                JpegBitmapEncoder encoder = new JpegBitmapEncoder();
                encoder.Frames.Add(BitmapFrame.Create(bmpScr));
                encoder.QualityLevel = 100;
                encoder.Save(fileStream);
                fileStream.Close();
                fileStream.Dispose();
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: " + e.Message);
            }
        }
        private void sharingUC_OnDataSent(object sender, RoutedEventArgs e)
        {
            sharingUC.Visibility = Visibility.Collapsed;
            calibrationMenu.Visibility = Visibility.Visible;
        }

        #endregion


        #endregion


        #region Crosshair - Visual feedback on gaze position

        private void ToggleCrosshair(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.CheckBoxVisualFeedback.IsChecked.Value)
            {
                RegisterForGazeDataEvent();

                // Add crosshair (visual feedback indicator) to canvas
                CanvasRoot.Children.Add(visualPoint);

                Canvas.SetTop(visualPoint, 0);
                Canvas.SetLeft(visualPoint, 0);
                Panel.SetZIndex(visualPoint, 3);
            }
            else
            {
                UnregisterForGazeDataEvent();
                CanvasRoot.Children.Remove(visualPoint);
            }
        }

        private void ToggleSmoothing(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.CheckBoxSmooth.IsChecked.Value)
                Settings.Instance.Processing.EyeMouseSmooth = true;
            else
                Settings.Instance.Processing.EyeMouseSmooth = false;

            UnregisterForGazeDataEvent();
            RegisterForGazeDataEvent();
        }

        private void AccuracyParamsChange(object sender, RoutedEventArgs e)
        {
            if (calibrationMenu.DistanceFromScreen != Settings.Instance.Calibration.DistanceFromScreen)
            {
                Settings.Instance.Calibration.DistanceFromScreen = calibrationMenu.DistanceFromScreen;
                double left = Tracker.Instance.Calibration.CalibMethod.CalculateDegreesLeft();  // recalculate
                double right = Tracker.Instance.Calibration.CalibMethod.CalculateDegreesRight(); // recalculate
                calibrationMenu.SetAccuracy(left, right);
            }
        }


        private void RegisterForGazeDataEvent()
        {
            if (Settings.Instance.Processing.EyeMouseSmooth)
                Tracker.Instance.GazeDataSmoothed.GazeDataChanged += GazeDataRaw_OnNewGazeData;
            else
                Tracker.Instance.GazeDataRaw.GazeDataChanged += GazeDataRaw_OnNewGazeData;
        }

        private void UnregisterForGazeDataEvent()
        {
            try
            {
                Tracker.Instance.GazeDataSmoothed.GazeDataChanged -= GazeDataRaw_OnNewGazeData;
                Tracker.Instance.GazeDataRaw.GazeDataChanged -= GazeDataRaw_OnNewGazeData;
            }
            catch (Exception ex)
            {
            }
        }

        private void GazeDataRaw_OnNewGazeData(double x, double y)
        {
            // On new data move the cross-hair
            CanvasRoot.Dispatcher.BeginInvoke
                (
                    DispatcherPriority.Normal,
                    new Action
                        (
                        delegate
                        {
                            if (x < 0 || y < 0) return;
                            Canvas.SetTop(visualPoint, y - visualPoint.Height / 2);
                            Canvas.SetLeft(visualPoint, x - visualPoint.Width / 2);
                        }
                        )
                );
        }

        #endregion


        #region Set/Get

        public static CalibrationWindow Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new CalibrationWindow();
                }

                return instance;
            }
        }

        public CalibrationPoint CurrentPoint
        {
            get { return calibrationControl.CurrentPoint; }
        }

        public GTGazeData GazeDataRaw { get; set; }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="100.0" width="100.0" x="2977.2850494164604" y="658.2206453768367"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="21.09375" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="39.453125">код</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n102">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[       #region Public Start/Stop/Reset/Recalibrate

        public void Start()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="2335.3738558400655" y="670.9672231290372"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">Start()<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n103">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            CanvasRoot.Width = Width; // Tracking screen width
            CanvasRoot.Height = Height;

            // Partial calibration if not zero or not full screen, set active calibration area by applying margin to the control. 
            if (GTSettings.Settings.Instance.Calibration.AreaWidth != 0 &&
                Settings.Instance.Calibration.AreaHeight != 0 &&
                Settings.Instance.Calibration.AreaWidth != Width &&
                Settings.Instance.Calibration.AreaHeight != Height)
            {
                calibrationControl.Width = Settings.Instance.Calibration.AreaWidth;
                calibrationControl.Height = Settings.Instance.Calibration.AreaHeight;

                // Align the calibration control (center)
                if (Settings.Instance.Calibration.CalibrationAlignment == CalibrationAlignmentEnum.Center)
                {
                    Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                    Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                }
                else
                {
                    // Align left/right, top, bottom
                    switch (Settings.Instance.Calibration.CalibrationAlignment)
                    {
                        case CalibrationAlignmentEnum.Top:
                            Canvas.SetTop(calibrationControl, 0);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Bottom:
                            Canvas.SetTop(calibrationControl, CanvasRoot.Height - calibrationControl.Height);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Left:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, 0);
                            break;
                        case CalibrationAlignmentEnum.Right:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, CanvasRoot.Width - calibrationControl.Width);
                            break;
                    }
                }
            }
            else
            {
                calibrationControl.Width = Width;
                calibrationControl.Height = Height;
                Canvas.SetTop(calibrationControl, 0);
                Canvas.SetLeft(calibrationControl, 0);
            }

            // Initialize calibration control and settings
            calibrationControl.NumberOfPoints = Settings.Instance.Calibration.NumberOfPoints;
            calibrationControl.RandomOrder = Settings.Instance.Calibration.RandomizePointOrder;
            calibrationControl.ColorPoints = Settings.Instance.Calibration.PointColor;
            calibrationControl.ColorBackground = Settings.Instance.Calibration.BackgroundColor;
            calibrationControl.PointDuration = Settings.Instance.Calibration.PointDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointDuration=" + calibrationControl.PointDuration);
            calibrationControl.PointDuration = 2000.0;

            calibrationControl.PointTransitionDuration = Settings.Instance.Calibration.PointTransitionDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointTransitionDuration=" + calibrationControl.PointTransitionDuration);
            calibrationControl.PointTransitionDuration = 2000.0;

            calibrationControl.PointDiameter = Settings.Instance.Calibration.PointDiameter;
            //erv 
            calibrationControl.PointDiameter = Settings.Instance.Visualization.CalibPointSize;
            Console.WriteLine("--- ERV -- Start() PointDiameter = CalibPointSize" + calibrationControl.PointDiameter);

            calibrationControl.Acceleration = Settings.Instance.Calibration.Acceleration;
            calibrationControl.Acceleration = 0.9;
            Console.WriteLine("--- ERV --- calibrationControl.Acceleration=" + calibrationControl.Acceleration);

            calibrationControl.Deacceleration = Settings.Instance.Calibration.Deacceleration;
            Console.WriteLine("--- ERV --- calibrationControl.Deacceleration=" + calibrationControl.Deacceleration);
            calibrationControl.Deacceleration = 0.9;

            calibrationControl.UseInfantGraphics = Settings.Instance.Calibration.UseInfantGraphics;



            // Register for events
            calibrationControl.OnCalibrationStart += calibrationControl_Start;
            calibrationControl.OnPointStart += calibrationControl_PointStart;
            calibrationControl.OnPointStop += calibrationControl_PointEnd;
            calibrationControl.OnCalibrationEnd += calibrationControl_End;

            this.BringIntoView();
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="3961.6088346448378" y="-1231.795585960572"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="4.547473508864641E-13" y="0.0">code<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n104">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            //this.DataContext = TrackingScreen.TrackingScreenBounds;
            InitializeComponent();
            visualPoint = new VisualGazePoint();

            // Get tracking-screen size
            Left = TrackingScreen.TrackingScreenLeft;
            Top = TrackingScreen.TrackingScreenTop;
            Width = TrackingScreen.TrackingScreenWidth;
            Height = TrackingScreen.TrackingScreenHeight;

            ExportCalibrationResults = false;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="59.90646895142467" width="166.7513148999774" x="3732.2678075312356" y="-1325.892332348311"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="59.90646895142467" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="2.8421709430404007E-14">Инициализируем компоненты, выставляем размер экрана<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n105">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            // Start calibration procedure
            calibrationControl.Start();
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.predefinedProcess">
          <y:Geometry height="40.0" width="180.0" x="3954.9844920948267" y="-1171.9808782130076"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="144.7421875" x="17.62890625" y="10.6494140625">Start calibration procedure<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n106">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Variables

        private double _acceleration = 0.4;
        private double _avgSumStdDev;
        private SolidColorBrush _colorBackground;
        private SolidColorBrush _colorPoints;
        private double _deacceleration = 0.6;
        private double _pointDuration = 100;
        private double _pointTransitionDuration = 1000;
        private bool _randomOrder = true;
        private bool calibrationCompleted;
        private List<CalibrationPoint> calibrationPoints = new List<CalibrationPoint>();
        private CalibrationPoint currentPoint;
        private CalibrationPoint fakePoint;
        private int indexInstancePoint;
        private bool isRecalibratingPoint;
        private bool isRunning;
        private CalibrationPoint nextPoint;
        private int numberOfPoints = 9;

        private double pointDiameter = 45;

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="3731.6088346448373" y="-1430.5124721531286"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="97.392578125" x="34.679368387488694" y="5.6494140625">#region Variables<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n107">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            // Hide menues and stuff
            calibrationMenu.Visibility = Visibility.Collapsed;
            sharingUC.Visibility = Visibility.Collapsed;

            calibrationMenu.OnAccept += AcceptCalibration;
            calibrationMenu.OnShare += ShareData;
            calibrationMenu.OnRecalibrate += RedoCalibration;
            calibrationMenu.OnToggleCrosshair += ToggleCrosshair;
            calibrationMenu.OnToggleSmoothing += ToggleSmoothing;
            calibrationMenu.OnAccuracyParamsChange += AccuracyParamsChange;

            sharingUC.OnDataSent += sharingUC_OnDataSent;

            KeyDown += Calibration_KeyDown;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="59.90646895142467" width="166.7513148999774" x="3732.2678075312356" y="-1251.0590709373569"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="59.90646895142467" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="-1.4210854715202004E-14">скрываем меню, настраиваем обработчики событий<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n108">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

        #endregion

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="2188.9111902145246" y="924.0567608498892"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.134975058938835"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n109">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="2418.911190214525" y="905.0451228619196"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.134975058938835"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n110">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            CanvasRoot.Width = Width; // Tracking screen width
            CanvasRoot.Height = Height;

            // Partial calibration if not zero or not full screen, set active calibration area by applying margin to the control. 
            if (GTSettings.Settings.Instance.Calibration.AreaWidth != 0 &&
                Settings.Instance.Calibration.AreaHeight != 0 &&
                Settings.Instance.Calibration.AreaWidth != Width &&
                Settings.Instance.Calibration.AreaHeight != Height)
            {
                calibrationControl.Width = Settings.Instance.Calibration.AreaWidth;
                calibrationControl.Height = Settings.Instance.Calibration.AreaHeight;

                // Align the calibration control (center)
                if (Settings.Instance.Calibration.CalibrationAlignment == CalibrationAlignmentEnum.Center)
                {
                    Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                    Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                }
                else
                {
                    // Align left/right, top, bottom
                    switch (Settings.Instance.Calibration.CalibrationAlignment)
                    {
                        case CalibrationAlignmentEnum.Top:
                            Canvas.SetTop(calibrationControl, 0);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Bottom:
                            Canvas.SetTop(calibrationControl, CanvasRoot.Height - calibrationControl.Height);
                            Canvas.SetLeft(calibrationControl, Width / 2 - (calibrationControl.Width / 2));
                            break;
                        case CalibrationAlignmentEnum.Left:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, 0);
                            break;
                        case CalibrationAlignmentEnum.Right:
                            Canvas.SetTop(calibrationControl, Height / 2 - (calibrationControl.Height / 2));
                            Canvas.SetLeft(calibrationControl, CanvasRoot.Width - calibrationControl.Width);
                            break;
                    }
                }
            }
            else
            {
                calibrationControl.Width = Width;
                calibrationControl.Height = Height;
                Canvas.SetTop(calibrationControl, 0);
                Canvas.SetLeft(calibrationControl, 0);
            }

            // Initialize calibration control and settings
            calibrationControl.NumberOfPoints = Settings.Instance.Calibration.NumberOfPoints;
            calibrationControl.RandomOrder = Settings.Instance.Calibration.RandomizePointOrder;
            calibrationControl.ColorPoints = Settings.Instance.Calibration.PointColor;
            calibrationControl.ColorBackground = Settings.Instance.Calibration.BackgroundColor;
            calibrationControl.PointDuration = Settings.Instance.Calibration.PointDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointDuration=" + calibrationControl.PointDuration);
            calibrationControl.PointDuration = 2000.0;

            calibrationControl.PointTransitionDuration = Settings.Instance.Calibration.PointTransitionDuration;
            Console.WriteLine("--- ERV --- calibrationControl.PointTransitionDuration=" + calibrationControl.PointTransitionDuration);
            calibrationControl.PointTransitionDuration = 2000.0;

            calibrationControl.PointDiameter = Settings.Instance.Calibration.PointDiameter;
            //erv 
            calibrationControl.PointDiameter = Settings.Instance.Visualization.CalibPointSize;
            Console.WriteLine("--- ERV -- Start() PointDiameter = CalibPointSize" + calibrationControl.PointDiameter);

            calibrationControl.Acceleration = Settings.Instance.Calibration.Acceleration;
            calibrationControl.Acceleration = 0.9;
            Console.WriteLine("--- ERV --- calibrationControl.Acceleration=" + calibrationControl.Acceleration);

            calibrationControl.Deacceleration = Settings.Instance.Calibration.Deacceleration;
            Console.WriteLine("--- ERV --- calibrationControl.Deacceleration=" + calibrationControl.Deacceleration);
            calibrationControl.Deacceleration = 0.9;

            calibrationControl.UseInfantGraphics = Settings.Instance.Calibration.UseInfantGraphics;



            // Register for events
            calibrationControl.OnCalibrationStart += calibrationControl_Start;
            calibrationControl.OnPointStart += calibrationControl_PointStart;
            calibrationControl.OnPointStop += calibrationControl_PointEnd;
            calibrationControl.OnCalibrationEnd += calibrationControl_End;

            this.BringIntoView();
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="2351.339225503679" y="750.9204576047495"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="4.547473508864641E-13" y="0.0">code<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n111">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            //this.DataContext = TrackingScreen.TrackingScreenBounds;
            InitializeComponent();
            visualPoint = new VisualGazePoint();

            // Get tracking-screen size
            Left = TrackingScreen.TrackingScreenLeft;
            Top = TrackingScreen.TrackingScreenTop;
            Width = TrackingScreen.TrackingScreenWidth;
            Height = TrackingScreen.TrackingScreenHeight;

            ExportCalibrationResults = false;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="59.90646895142467" width="166.7513148999774" x="2121.9981983900766" y="740.9672231290372"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="59.90646895142467" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="-8.526512829121202E-14">Инициализируем компоненты, выставляем размер экрана<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n112">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            // Start calibration procedure
            calibrationControl.Start();
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.predefinedProcess">
          <y:Geometry height="40.0" width="180.0" x="2344.7148829536677" y="810.7351653523139"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="144.7421875" x="17.62890625" y="10.6494140625">Start calibration procedure<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n113">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            // Hide menues and stuff
            calibrationMenu.Visibility = Visibility.Collapsed;
            sharingUC.Visibility = Visibility.Collapsed;

            calibrationMenu.OnAccept += AcceptCalibration;
            calibrationMenu.OnShare += ShareData;
            calibrationMenu.OnRecalibrate += RedoCalibration;
            calibrationMenu.OnToggleCrosshair += ToggleCrosshair;
            calibrationMenu.OnToggleSmoothing += ToggleSmoothing;
            calibrationMenu.OnAccuracyParamsChange += AccuracyParamsChange;

            sharingUC.OnDataSent += sharingUC_OnDataSent;

            KeyDown += Calibration_KeyDown;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="59.90646895142467" width="166.7513148999774" x="2121.9981983900766" y="815.800484539991"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="59.90646895142467" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="2.8421709430404007E-14">скрываем меню, настраиваем обработчики событий<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n114">
      <data key="d4"/>
      <data key="d6">
        <y:UMLNoteNode>
          <y:Geometry height="118.13928682812343" width="225.84397040766044" x="1897.5563128204617" y="-685.4031714744924"/>
          <y:Fill color="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#C0C0C0" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="16" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="66.375" modelName="custom" textColor="#000000" visible="true" width="225.84397040766044" x="0.0" y="25.882143414061716">Генерация CalibrationControl.cs
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:UMLNoteNode>
      </data>
    </node>
    <node id="n115">
      <data key="d4"><![CDATA[DG_BEG]]></data>
      <data key="d5"><![CDATA[CODE_JAVA]]></data>
      <data key="d6">
        <y:SVGNode>
          <y:Geometry height="64.53585815429688" width="56.560157775878906" x="1738.405508996299" y="-658.6014571375799"/>
          <y:Fill color="#CCCCFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="178.609375" x="-61.02460861206055" y="68.53585815429688">Генерация CalibrationControl.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="-0.5" nodeRatioX="0.0" nodeRatioY="0.5" offsetX="0.0" offsetY="4.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:SVGNodeProperties usingVisualBounds="true"/>
          <y:SVGModel svgBoundsPolicy="0">
            <y:SVGContent refid="1"/>
          </y:SVGModel>
        </y:SVGNode>
      </data>
    </node>
    <node id="n116">
      <data key="d4"><![CDATA[SI_BEG]]></data>
      <data key="d5"><![CDATA[using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Windows.Threading;
using GazeTrackerUI.Tools;
using GazeTrackingLibrary.Calibration;
using GazeTrackingLibrary.Logging;
using GazeTrackingLibrary.Utils;
using GTCommons;
using GTCommons.Enum;
using GTSettings;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.internalStorage">
          <y:Geometry height="55.804717792552765" width="167.39241346185827" x="1682.9893811533098" y="-542.2094453540112"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="42.021484375" x="62.685464543429134" y="18.551772958776382">usings <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n117">
      <data key="d4"><![CDATA[WR_RES_FILE]]></data>
      <data key="d5"><![CDATA[GazeTrackerUI\Calibration.cs]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.dataBase">
          <y:Geometry height="64.53585815429688" width="148.682197954262" x="1893.98632590665" y="-550.9405857157553"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="custom" textColor="#000000" visible="true" width="148.682197954262" x="0.0" y="6.6273040771484375">Записать в файл GazeTrackerUI\Calibration.cs<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n118">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[        #region Constructor

        public CalibrationControl()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="2007.5965904889795" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">конструктор CalibrationControl<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n119">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

        #endregion

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="2091.7928977498373" y="-139.85469087545812"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389487"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n120">
      <data key="d4"><![CDATA[SI_END]]></data>
      <data key="d5"><![CDATA[
// конец файла

]]></data>
      <data key="d6">
        <y:ShapeNode>
          <y:Geometry height="40.0" width="50.0" x="4237.869455233016" y="-165.1184381422461"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" textColor="#000000" visible="true" width="4.0" x="23.0" y="18.0">
            <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:Shape type="triangle"/>
        </y:ShapeNode>
      </data>
    </node>
    <node id="n121">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[namespace GazeTrackerUI.CalibrationUI
{
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="599.3064645510758" width="69.0163836393408" x="1850.381794615168" y="-450.1727762393548"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="599.3064645510758" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace GazeTrackerUI.CalibrationUI
<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n122">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="594.218041000247" width="69.0163836393408" x="4097.58910938415" y="-406.0904447337982"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="594.218041000247" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="0.0" y="0.0">namespace <y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n123">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[    #region Includes
    #endregion

    public partial class CalibrationControl : UserControl
    {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="62.0163836393408" x="1938.1481782545093" y="-445.084352688526"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="62.0163836393408" x="0.0" y="0.0">class CalibrationControl : UserControl<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n124">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Variables

        private double _acceleration = 0.4;
        private double _avgSumStdDev;
        private SolidColorBrush _colorBackground;
        private SolidColorBrush _colorPoints;
        private double _deacceleration = 0.6;
        private double _pointDuration = 100;
        private double _pointTransitionDuration = 1000;
        private bool _randomOrder = true;
        private bool calibrationCompleted;
        private List<CalibrationPoint> calibrationPoints = new List<CalibrationPoint>();
        private CalibrationPoint currentPoint;
        private CalibrationPoint fakePoint;
        private int indexInstancePoint;
        private bool isRecalibratingPoint;
        private bool isRunning;
        private CalibrationPoint nextPoint;
        private int numberOfPoints = 9;

        private double pointDiameter = 45;

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="2024.22093303899" y="-378.8163344237828"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="97.392578125" x="34.679368387488466" y="5.6494140625">#region Variables<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n125">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[       #region Set/Get

        public double Width
        {
            set { this.CanvasCalibration.Width = value; }
            get { return this.CanvasCalibration.Width; }
        }

        public double Height
        {
            set { this.CanvasCalibration.Height = value; }
            get { return this.CanvasCalibration.Height; }
        }

        public int NumberOfPoints
        {
            get { return numberOfPoints; }
            set { numberOfPoints = value; }
        }

        public List<CalibrationPoint> CalibrationPoints
        {
            get { return calibrationPoints; }
            set { calibrationPoints = value; }
        }

        public bool RandomOrder
        {
            get { return _randomOrder; }
            set { _randomOrder = value; }
        }

        public CalibrationPoint CurrentPoint
        {
            get { return currentPoint; }
        }

        public bool IsRecalibratingPoint
        {
            get { return isRecalibratingPoint; }
            set { isRecalibratingPoint = value; }
        }

        public SolidColorBrush ColorPoints
        {
            get { return _colorPoints; }
            set { _colorPoints = value; }
        }


        public double PointDiameter
        {
            get { return pointDiameter; }
            set { pointDiameter = value; }
        }

        public SolidColorBrush ColorBackground
        {
            get { return _colorBackground; }
            set
            {
                _colorBackground = value;
                CanvasCalibration.Background = _colorBackground;
            }
        }

        public double PointDuration
        {
            get { return _pointDuration; }
            set { _pointDuration = value; }
        }

        public double PointTransitionDuration
        {
            get { return _pointTransitionDuration; }
            set { _pointTransitionDuration = value; }
        }

        public double Acceleration
        {
            get { return _acceleration; }
            set { _acceleration = value / 10; }
        }

        public double Deacceleration
        {
            get { return _deacceleration; }
            set { _deacceleration = value / 10; }
        }


        public bool UseInfantGraphics { get; set; }


        public double AvgSumStdDev
        {
            get { return _avgSumStdDev; }
            set { _avgSumStdDev = value; }
        }

        public double AvgDistFromTargets { get; set; }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="100.0" width="100.0" x="2237.5965904889795" y="-289.85371233325054"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="31.90625">#region Set/Get
</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n126">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[        public void Start()
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="2694.8998251547036" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">Start()<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n127">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="2779.0961324155614" y="-70.80848063264037"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389487"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n128">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            Reset();

            GeneratePositions(this.Width, this.Height);

            if (RandomOrder)
                RandomizeCalibrationPoints();

            if (currentPoint == null)
                currentPoint = GetNextPoint();

            Cursor = Cursors.None; // Redisplay after calibration
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="2711.524167704715" y="-224.93314588981062"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">code<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n129">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            InitializeComponent();
            //CanvasCalibration.OnUIElementMoved += CanvasCalibration_OnUIElementMoved;
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="59.90646895142467" width="166.7513148999774" x="2024.8799059253893" y="-229.7611598268827"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="59.90646895142467" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="2.8421709430404007E-14">Инициализируем компоненты<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n130">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            StartWithFirstFakePoint(new Point(0, 0), currentPoint.Point);
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.predefinedProcess">
          <y:Geometry height="40.0" width="180.0" x="2704.8998251547046" y="-165.1184381422461"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="138.689453125" x="20.6552734375" y="10.6494140625">StartWithFirstFakePoint()<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n131">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[        #region Events

        public static readonly RoutedEvent CalibrationStartEvent = EventManager.RegisterRoutedEvent("CalibrationStartEvent", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(CalibrationControl));
        public static readonly RoutedEvent CalibrationEndEvent = EventManager.RegisterRoutedEvent("CalibrationEndEvent", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(CalibrationControl));
        public static readonly RoutedEvent CalibrationAbortEvent = EventManager.RegisterRoutedEvent("CalibrationAbortEvent", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(CalibrationControl));
        public static readonly RoutedEvent PointStartEvent = EventManager.RegisterRoutedEvent("PointStartEvent", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(CalibrationControl));
        public static readonly RoutedEvent PointStopEvent = EventManager.RegisterRoutedEvent("PointStopEvent", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof(CalibrationControl));

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="30.0" width="166.7513148999774" x="2024.220933038991" y="-334.3812996317006"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" textColor="#000000" visible="true" width="84.05078125" x="41.350266824988466" y="5.6494140625">#region Events<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n132">
      <data key="d4"><![CDATA[PROC_BEG]]></data>
      <data key="d5"><![CDATA[        public void GeneratePositions(double areaWidth, double areaHeight)
        {
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="40.0" width="200.0" x="2470.5685709165177" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="200.0" x="0.0" y="0.0">GeneratePositions()<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n133">
      <data key="d4"><![CDATA[SH_END]]></data>
      <data key="d5"><![CDATA[        }

]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.terminator">
          <y:Geometry height="29.91754988212216" width="31.607385478285096" x="2554.7648781773755" y="-154.93314588981062"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="5.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="31.607385478285096" x="0.0" y="-3.1349750589389203"/>
        </y:GenericNode>
      </data>
    </node>
    <node id="n134">
      <data key="d4"><![CDATA[ACTION]]></data>
      <data key="d5"><![CDATA[            int pointNumber = 1;
            int columnCount = 4; // default 12 points (indx starting at 1-4, eg. 4x3)
            int rowCount = 3; // default 12 points (indx starting at 1-3, eg. 4x3)

			switch (numberOfPoints)
			{
				case 9:
					columnCount = 3;
					rowCount = 3;
					break;
				case 12:
					columnCount = 4;
					rowCount = 3;
					break;
				case 16:
					columnCount = 4;
					rowCount = 4;
					break;
				default:
					columnCount = 3;
					rowCount = 3;
					break;
			}

            double rowSpacer = (areaHeight - pointDiameter) / (rowCount - 1);
            double columnSpacer = (areaWidth - pointDiameter) / (columnCount - 1);

            //if (UseInfantGraphics)
            //    calibrationPointDiameter = calibrationPointDiameter * 2;

            //rowSpacer = rowSpacer - pointDiameter / 2;
            //columnSpacer = columnSpacer - pointDiameter / 2;

            // Adjust for 0-based array loop
            rowCount -= 1;
            columnCount -= 1;

            for (int row = 0; row <= rowCount; row++)
            {
                for (int column = 0; column <= columnCount; column++)
                {
                    var pos = new Point(column * columnSpacer, row * rowSpacer);

                    pos.Y = pos.Y + pointDiameter / 2;
                    // Compensate for top/left positioning, eg. 0,0 is top/left when it should be 25,25 (center of point)
                    pos.X = pos.X + pointDiameter / 2;

                    var calPoint = new CalibrationPoint(
                        pointNumber,
                        pos,
                        pointDiameter,
                        _colorPoints,
                        PointDuration);

                    if (UseInfantGraphics)
                        SetRandomImage(calPoint);

                    calibrationPoints.Add(calPoint);
                    pointNumber++;
                }
            }
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.process">
          <y:Geometry height="40.0" width="166.7513148999774" x="2487.1929134665293" y="-224.93314588981062"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="40.0" modelName="custom" textColor="#000000" visible="true" width="166.7513148999774" x="0.0" y="0.0">code<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n135">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Public methods
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="62.0163836393408" x="2367.5965904889795" y="-289.9462648396184"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="62.0163836393408" x="4.547473508864641E-13" y="-2.8421709430404007E-14">#region Public methods<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="4"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n136">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[#endregion]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="69.0163836393408" x="3083.6870269106976" y="-289.9462648396184"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="4.547473508864641E-13" y="-2.8421709430404007E-14">#endregion<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <node id="n137">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        public void Stop()
        {
            isRunning = false;

            if (calibrationCompleted) return;
            //GTCommands.Instance.Calibration.Abort();

            // Raise calibration abort event
            var args1 = new RoutedEventArgs();
            args1 = new RoutedEventArgs(CalibrationAbortEvent, this);
            RaiseEvent(args1);
        }

        public void Reset()
        {
            calibrationCompleted = false;
            CanvasCalibration.Children.Clear();
            currentPoint = null;
            nextPoint = null;
            indexInstancePoint = -1;
            calibrationPoints = new List<CalibrationPoint>();
            _avgSumStdDev = 0;
        }

        public void ShowAllPoints()
        {
            // Loop through Calpoints in the UserControl (eg. this)
            foreach (CalibrationPoint t in calibrationPoints)
            {
                CalibrationPoint calPoint = CopyPoint(t);
                calPoint.Visibility = Visibility.Visible;

                CanvasCalibration.Children.Add(calPoint);
                Canvas.SetTop(calPoint, calPoint.Point.Y - calPoint.Diameter / 2);
                Canvas.SetLeft(calPoint, calPoint.Point.X - calPoint.Diameter / 2);
                Panel.SetZIndex(calPoint, 1);
            }
        }
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="100.0" width="100.0" x="2953.687026910697" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="31.90625">code
</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n138">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region FakePoint (display one point to grab attention but no events are sent to the eye tracker)

        private void StartWithFirstFakePoint(Point start, Point end)
        {
            fakePoint = new CalibrationPoint(
                -1,
                TrackingScreen.TrackingScreenCenter,
                pointDiameter,
                ColorPoints,
                1000);

            // Add point to display canvas
            CanvasCalibration.Children.Add(fakePoint);
            Canvas.SetTop(fakePoint, fakePoint.Point.Y - pointDiameter / 2);
            Canvas.SetLeft(fakePoint, fakePoint.Point.X - pointDiameter / 2);

            fakePoint.RunScalePointAnimation();
            fakePoint.OnPointDisplayed += fakePoint_PointDisplayedAction;
        }

        private void fakePoint_PointDisplayedAction(object sender, RoutedEventArgs e)
        {
            // Animate from previous fake point to new real point

            var dbX = new DoubleAnimation();
            dbX.From = fakePoint.Point.X - pointDiameter / 2;
            dbX.To = currentPoint.Point.X - pointDiameter / 2;
            dbX.Duration = TimeSpan.FromMilliseconds(PointTransitionDuration);

            dbX.AccelerationRatio = 0.4;
            dbX.DecelerationRatio = 0.4;

            var dbY = new DoubleAnimation();
            dbY.From = fakePoint.Point.Y - pointDiameter / 2;
            dbY.To = currentPoint.Point.Y - pointDiameter / 2;
            dbY.Duration = TimeSpan.FromMilliseconds(PointTransitionDuration);

            dbY.AccelerationRatio = 0.4;
            dbY.DecelerationRatio = 0.4;

            dbY.Completed += fakePoint_Completed;

            // Start animations
            fakePoint.BeginAnimation(Canvas.LeftProperty, dbX);
            fakePoint.BeginAnimation(Canvas.TopProperty, dbY);
            fakePoint.RunScalePointAnimationReverse(); // At the same time, zoom out again..
        }


        private void fakePoint_Completed(object sender, EventArgs e)
        {
            fakePoint.Visibility = Visibility.Collapsed;

            // Raise calibration start event

            RoutedEventArgs args1 = new RoutedEventArgs();
            args1 = new RoutedEventArgs(CalibrationStartEvent, this);
            RaiseEvent(args1);

            isRunning = true;

            // Starts the main calibration loop..
            DisplayPoints();
        }

        #endregion

        #region Calibration procedure, Animations and Transitions

        private void DisplayPoints()
        {
            if (!isRunning) return;

            // Add point to display canvas
            CanvasCalibration.Children.Add(currentPoint);
            Canvas.SetTop(currentPoint, currentPoint.Point.Y - pointDiameter / 2);
            Canvas.SetLeft(currentPoint, currentPoint.Point.X - pointDiameter / 2);

            // When point shrunk, signal Eye tracker, eg. EyeTrackerPointEnd.
            currentPoint.OnPointDisplayed += PointStop;

            // When point displayed, animate transition to next point (if any)
            currentPoint.OnPointDisplayed += AnimateBetweenPoints;

            // Signal eye tracker, new point starting
            //GTCommands.Instance.Calibration.PointStart(InstancePoint.Number, InstancePoint.Point);
            EyeTrackerPointStart(currentPoint);

            // Starts scale animation (to fixate)
            currentPoint.RunScalePointAnimation();
        }

        private void AnimateBetweenPoints(object sender, RoutedEventArgs e)
        {
            // Get next point (to animate between)
            nextPoint = GetNextPoint();

            if (nextPoint == null)
            {
                // All points displayed, raise event
                calibrationCompleted = true;
                var args1 = new RoutedEventArgs();
                args1 = new RoutedEventArgs(CalibrationEndEvent, this);
                RaiseEvent(args1);
            }
            else
            {
                // Animate from previous to new point
                var calPointX = new DoubleAnimation();
                calPointX.From = currentPoint.Point.X - pointDiameter / 2;
                calPointX.To = nextPoint.Point.X - pointDiameter / 2;
                calPointX.Duration = TimeSpan.FromMilliseconds(PointTransitionDuration);
                calPointX.AccelerationRatio = _acceleration;
                calPointX.DecelerationRatio = _deacceleration;

                var calPointY = new DoubleAnimation();
                calPointY.From = currentPoint.Point.Y - pointDiameter / 2;
                calPointY.To = nextPoint.Point.Y - pointDiameter / 2;
                calPointY.Duration = TimeSpan.FromMilliseconds(PointTransitionDuration);
                calPointY.AccelerationRatio = _acceleration;
                calPointY.DecelerationRatio = _deacceleration;

                calPointX.Completed += AnimateBetweenPoints_Completed;

                // Start animations
                currentPoint.BeginAnimation(Canvas.LeftProperty, calPointX);
                currentPoint.BeginAnimation(Canvas.TopProperty, calPointY);
                currentPoint.RunScalePointAnimationReverse(); // At the same time, zoom out again..
            }
        }

        private void AnimateBetweenPoints_Completed(object sender, EventArgs e)
        {
            // Hide last point, make a switch to the next point
            currentPoint.Visibility = Visibility.Collapsed;

            currentPoint = nextPoint;
            currentPoint.Visibility = Visibility.Visible;

            // Get next point and continue..
            DisplayPoints();
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3195.7806111868967" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="111.65625" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="26.58578834868615">#region FakePoint 
(display one point to grab attention but no events are sent to the eye tracker)</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n139">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Visualize Calibration Results & recalibrate single point

        public BitmapSource VisualizeCalibrationResults(List<CalibrationTarget> calibTargets)
        {
            CanvasCalibration.Children.Clear();

            // Draw also to Drawing Visual
            DrawingVisual drawingVisual = new DrawingVisual();
            DrawingContext drawingContext = drawingVisual.RenderOpen();

            // Fill with background color
            drawingContext.DrawRectangle(
                this.CanvasCalibration.Background, 
                null, 
                new Rect(0, 0, this.ActualWidth, this.ActualHeight));

            // Redisplay cursor
            Cursor = Cursors.Arrow;

            double sumStdDeviation = 0;
            double sumDistFromTargetsX = 0;
            double sumDistFromTargetsY = 0;

            // Loop through Calpoints in the UserControl
            foreach (CalibrationPoint t in calibrationPoints)
            {
                CalibrationPoint calPoint = CopyPoint(t);

                #region Draw tracker data for calPoint

                foreach (CalibrationTarget trackerPoint in calibTargets)
                {
                    // If target number is the same, create visuals for calibration point
                    if (trackerPoint.targetNumber.Equals(calPoint.Number))
                    {
                        #region Draw raw estimated gaze positions

                        foreach (GTPoint gpLeft in trackerPoint.estimatedGazeCoordinatesLeft)
                        {
                            // compensate for relative to full screen coordinates
                            Point p = AdjustPointToPartial(new Point(gpLeft.X, gpLeft.Y));
                            Ellipse g = new Ellipse { Width = 3, Height = 3, Fill = new SolidColorBrush(Colors.Red) };
                            CanvasCalibration.Children.Add(g);
                            Canvas.SetTop(g, p.Y);
                            Canvas.SetLeft(g, p.X);

                            // Draw also to Drawing Visual
                            drawingContext.DrawEllipse(Brushes.Red, null, p, 3, 3);
                        }

                        foreach (GTPoint gpRight in trackerPoint.estimatedGazeCoordinatesRight)
                        {
                            Point p = AdjustPointToPartial(new Point(gpRight.X, gpRight.Y));
                            Ellipse g = new Ellipse { Width = 3, Height = 3, Fill = new SolidColorBrush(Colors.Blue) };
                            CanvasCalibration.Children.Add(g);
                            Canvas.SetTop(g, p.Y);
                            Canvas.SetLeft(g, p.X);

                            // Draw also to Drawing Visual
                            drawingContext.DrawEllipse(Brushes.Blue, null, p, 3, 3);
                        }

                        #endregion

                        #region Draw Standard deviation indicator

                        CalibrationFeedbackPoint feedback = new CalibrationFeedbackPoint();
                        double stdDevGazeCoordinates = trackerPoint.stdDeviationGazeCoordinatesLeft;

                        // binocular
                        if (trackerPoint.stdDeviationGazeCoordinatesRight != 0)
                        {
                            stdDevGazeCoordinates += trackerPoint.stdDeviationGazeCoordinatesRight;
                            stdDevGazeCoordinates = stdDevGazeCoordinates / 2;
                        }

                        feedback.Width = stdDevGazeCoordinates;
                        feedback.Height = stdDevGazeCoordinates;

                        if (feedback.Width > 80)
                            feedback.EllipseBackground.Fill = new SolidColorBrush(Colors.Red);
                        else
                            feedback.EllipseBackground.Fill = new SolidColorBrush(Colors.Green);

                        CanvasCalibration.Children.Add(feedback);

                        #endregion


                        #region Average mean gaze

                        Point avgMeanGazeCoordinates = new Point(trackerPoint.meanGazeCoordinatesLeft.X, trackerPoint.meanGazeCoordinatesLeft.Y);

                        //// binocular
                        //if (trackerPoint.meanGazeCoordinatesRight.X != 0)
                        //{
                        //    avgMeanGazeCoordinates.Y += trackerPoint.meanGazeCoordinatesRight.Y;
                        //    avgMeanGazeCoordinates.X += trackerPoint.meanGazeCoordinatesRight.X;

                        //    avgMeanGazeCoordinates.X = avgMeanGazeCoordinates.X/2;
                        //    avgMeanGazeCoordinates.Y = avgMeanGazeCoordinates.Y/2;
                        //}

                        // Position avgMean feedback, compensate for relative to full screen coordinates
                        Point adjustedAvgMeanGazePoint = AdjustPointToPartial(avgMeanGazeCoordinates);
                        Canvas.SetTop(feedback, adjustedAvgMeanGazePoint.Y);
                        Canvas.SetLeft(feedback, adjustedAvgMeanGazePoint.X);
                        Panel.SetZIndex(feedback, 2);

                        // Draw also to Drawing Visual
                        drawingContext.DrawEllipse(
                            feedback.EllipseBackground.Fill,
                            null,
                            adjustedAvgMeanGazePoint,
                            stdDevGazeCoordinates,
                            stdDevGazeCoordinates);


                        #region Connect with line if more than 80 px away

                        // When point is more than 80px. away connect it with a dotted line to center
                        if (trackerPoint.meanGazeCoordinatesLeft.Y >= calPoint.Point.Y + 80 ||
                            trackerPoint.meanGazeCoordinatesLeft.Y <= calPoint.Point.Y + 80)
                        {
                            // Start line
                            var myLine = new Line { X1 = calPoint.Point.X, Y1 = calPoint.Point.Y };

                            // End line
                            if (!double.IsNaN(feedback.Width))
                                myLine.X2 = adjustedAvgMeanGazePoint.X + feedback.Width / 2;

                            if (!double.IsNaN(feedback.Height))
                                myLine.Y2 = adjustedAvgMeanGazePoint.Y + feedback.Height / 2;

                            myLine.Stroke = Brushes.LightSteelBlue;

                            var dashes = new DoubleCollection { 2, 2 };
                            myLine.StrokeDashArray = dashes;
                            myLine.StrokeDashCap = PenLineCap.Round;

                            CanvasCalibration.Children.Add(myLine);

                            // Draw also to Drawing Visual
                            Pen linePen = new Pen();
                            linePen.Brush = myLine.Stroke;
                            linePen.DashStyle = DashStyles.Dash;
                            linePen.DashCap = PenLineCap.Round;

                            drawingContext.DrawLine(
                                linePen,
                                new Point(myLine.X1, myLine.Y1),
                                new Point(myLine.X2, myLine.Y2));
                        }

                        #endregion

                        #endregion

                        #region Calculate sum std dev

                        sumDistFromTargetsY += avgMeanGazeCoordinates.Y - (calPoint.Point.Y - calPoint.Diameter / 2);
                        sumDistFromTargetsX += avgMeanGazeCoordinates.X - (calPoint.Point.X - calPoint.Diameter / 2);

                        double sumStdDevAvg = trackerPoint.stdDeviationGazeCoordinatesLeft + trackerPoint.stdDeviationGazeCoordinatesRight;
                        sumStdDevAvg = sumStdDevAvg / 2;
                        sumStdDeviation += sumStdDevAvg;

                        #endregion
                    }
                }

                #endregion

                #region Draw calibration points (last to stay on top)

                calPoint.Visibility = Visibility.Visible;
                calPoint.Opacity = 0.5;
                CanvasCalibration.Children.Add(calPoint);
                Canvas.SetTop(calPoint, calPoint.Point.Y - calPoint.Diameter / 2);
                Canvas.SetLeft(calPoint, calPoint.Point.X - calPoint.Diameter / 2);
                Panel.SetZIndex(calPoint, 99);

                // Draw also to Drawing Visual
                SolidColorBrush whiteBrush = new SolidColorBrush();
                whiteBrush.Color = Color.FromArgb(122, 255, 255, 255);
                drawingContext.DrawEllipse(
                   whiteBrush,
                    null,
                    calPoint.Point,
                    calPoint.Diameter / 2,
                    calPoint.Diameter / 2);
                drawingContext.DrawEllipse(
                   null,
                    new Pen(Brushes.Black, 1f),
                    calPoint.Point,
                    8,
                    8);

                // Enable recalibration 
                calPoint.OnClick += RecalibratePoint;

                #endregion
            }

            // Generate values for the 1-5 star ratings-control from quality feeback
            AvgSumStdDev = sumStdDeviation / calibTargets.Count;
            AvgDistFromTargets = ((sumDistFromTargetsY + sumDistFromTargetsX) / 2) / calibTargets.Count;

            // Now perform the rendering of the Visual to a bitmap
            drawingContext.Close();
            var bmp = new RenderTargetBitmap((int)ActualWidth, (int)ActualHeight, 96, 96, PixelFormats.Pbgra32);
            bmp.Render(drawingVisual);
           
            return bmp;
        }

        public void RecalibratePoint(object sender, RoutedEventArgs e)
        {
            isRecalibratingPoint = true;
            CanvasCalibration.Children.Clear();
            Cursor = Cursors.None; // Redisplay after calibration

            // Add single point
            var calPoint = sender as CalibrationPoint;
            CanvasCalibration.Children.Add(calPoint);

            if (calPoint != null)
            {
                Canvas.SetTop(calPoint, calPoint.Point.Y - calPoint.Diameter / 2);
                Canvas.SetLeft(calPoint, calPoint.Point.X - calPoint.Diameter / 2);

                // Run animation, when done the isRecalibratingPoint will trigger tracker.CalibrationEnd -> calculate coords..
                calPoint.OnPointDisplayed += PointStop;
                calPoint.RunScalePointAnimation();
                EyeTrackerPointStart(calPoint);
            }
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3325.7806111868967" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="81.46875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="41.67953834868615">#region Visualize Calibration Results &amp; recalibrate single point</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n140">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Events and Eye Tracker Signals

        private void PointStop(object sender, RoutedEventArgs e)
        {
            EyeTrackerPointStop(sender as CalibrationPoint);
        }

        private void EyeTrackerPointStart(CalibrationPoint calPoint)
        {
            currentPoint = calPoint;
            //GTCommands.Instance.CalibrationPointStart(InstancePoint.Number, InstancePoint.Point);

            var args1 = new RoutedEventArgs();
            args1 = new RoutedEventArgs(PointStartEvent, calPoint);
            RaiseEvent(args1);
        }

        private void EyeTrackerPointStop(CalibrationPoint calPoint)
        {
            currentPoint = calPoint;
            var args1 = new RoutedEventArgs();
            args1 = new RoutedEventArgs(PointStopEvent, calPoint);
            RaiseEvent(args1);
        }


        public event RoutedEventHandler OnPointStart
        {
            add { AddHandler(PointStartEvent, value); }
            remove { RemoveHandler(PointStartEvent, value); }
        }

        public event RoutedEventHandler OnPointStop
        {
            add { AddHandler(PointStopEvent, value); }
            remove { RemoveHandler(PointStopEvent, value); }
        }

        public event RoutedEventHandler OnCalibrationStart
        {
            add { AddHandler(CalibrationStartEvent, value); }
            remove { RemoveHandler(CalibrationStartEvent, value); }
        }

        public event RoutedEventHandler OnCalibrationEnd
        {
            add { AddHandler(CalibrationEndEvent, value); }
            remove { RemoveHandler(CalibrationEndEvent, value); }
        }

        public event RoutedEventHandler OnCalibrationAbort
        {
            add { AddHandler(CalibrationAbortEvent, value); }
            remove { RemoveHandler(CalibrationAbortEvent, value); }
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3455.7806111868967" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="56.77328834868615">#region Events and Eye Tracker Signals</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n141">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Calibration Points

        private static CalibrationPoint CopyPoint(CalibrationPoint point)
        {
            var newPoint = new CalibrationPoint
                               {
                                   Number = point.Number,
                                   Point = point.Point,
                                   PointColor = point.PointColor,
                                   Diameter = point.Diameter,
                                   PointDuration = point.PointDuration
                               };
            return newPoint;
        }

        private CalibrationPoint GetPointAt(int indexPosition)
        {
            return calibrationPoints[indexPosition];
        }

        private CalibrationPoint GetNextPoint()
        {
            try
            {
                indexInstancePoint++; // starts at -1

                if (indexInstancePoint < NumberOfPoints)
                    return calibrationPoints[indexInstancePoint];
                else
                    return null;

            }
            catch (Exception ex)
            {
                ErrorLogger.ProcessException(ex, false);
                return null;
            }
        }


        private void RandomizeCalibrationPoints()
        {
            var randomizedList = new List<CalibrationPoint>();
            var rnd = new Random();
            while (calibrationPoints.Count != 0)
            {
                int index = rnd.Next(0, calibrationPoints.Count);
                randomizedList.Add(calibrationPoints[index]);
                calibrationPoints.RemoveAt(index);
            }

            calibrationPoints = randomizedList;
        }

        bool errorLoadingImages = false;

        private void SetRandomImage(CalibrationPoint point)
        {
            if (errorLoadingImages)
                return;

            try
            {
                var imageList = new ArrayList();
                var di = new DirectoryInfo(Directory.GetCurrentDirectory() + "\\InfantGraphics\\");

                foreach (FileInfo file in di.GetFiles())
                {
                    imageList.Add(file.FullName);
                }

                var random = new Random();
                int num = random.Next(imageList.Count - 1);

                var img = new BitmapImage(new Uri(imageList[num].ToString()));
                point.PointImage(img);
            }
            catch (Exception ex)
            {
                errorLoadingImages = true;
                MessageBox.Show("Could not locate the \"InfantGraphics\" folder, please ensure that it exists in the application directory.");
            }
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3585.7806111868967" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="64.32016334868615">#region Calibration Points</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n142">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[        #region Convert point to absolute screen position

        public Point AdjustPointFromPartialCalibration(Point point)
        {
            // Check for zero
            if (Settings.Instance.Calibration.AreaWidth == 0 || Settings.Instance.Calibration.AreaHeight == 0)
                return point;

            // Check for full screen, primary
            if (Settings.Instance.Calibration.TrackingMonitor == Monitor.Primary &&
               Settings.Instance.Calibration.AreaWidth == ScreenParameters.PrimaryResolution.Width &&
               Settings.Instance.Calibration.AreaHeight == ScreenParameters.PrimaryResolution.Height)
                return point;

            // Check for full screen, secondary
            if (Settings.Instance.Calibration.TrackingMonitor == Monitor.Secondary &&
               Settings.Instance.Calibration.AreaWidth == ScreenParameters.SecondaryResolution.Width &&
               Settings.Instance.Calibration.AreaHeight == ScreenParameters.SecondaryResolution.Height)
                return point;

            // Partial calibration, scale
            Point p = new Point(point.X, point.Y);
            double adjustX = TrackingScreen.TrackingScreenWidth / 2 - (Settings.Instance.Calibration.AreaWidth / 2);
            double adjustY = TrackingScreen.TrackingScreenHeight / 2 - (Settings.Instance.Calibration.AreaHeight / 2);

            p.X += adjustX;
            p.Y += adjustY;

            return p;
        }

        public Point AdjustPointToPartial(Point point)
        {
            // Check for zero
            if (Settings.Instance.Calibration.AreaWidth == 0 || Settings.Instance.Calibration.AreaHeight == 0)
                return point;

            // Check for full screen, primary
            if (Settings.Instance.Calibration.TrackingMonitor == Monitor.Primary &&
               Settings.Instance.Calibration.AreaWidth == ScreenParameters.PrimaryResolution.Width &&
               Settings.Instance.Calibration.AreaHeight == ScreenParameters.PrimaryResolution.Height)
                return point;

            // Check for full screen, secondary
            if (Settings.Instance.Calibration.TrackingMonitor == Monitor.Secondary &&
               Settings.Instance.Calibration.AreaWidth == ScreenParameters.SecondaryResolution.Width &&
               Settings.Instance.Calibration.AreaHeight == ScreenParameters.SecondaryResolution.Height)
                return point;

            // Partial calibration, scale
            Point p = new Point(point.X, point.Y);
            double adjustX = TrackingScreen.TrackingScreenWidth / 2 - (Settings.Instance.Calibration.AreaWidth / 2);
            double adjustY = TrackingScreen.TrackingScreenHeight / 2 - (Settings.Instance.Calibration.AreaHeight / 2);

            p.X -= adjustX;
            p.Y -= adjustY;

            return p;
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3715.7806111868967" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="51.28125" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="56.77328834868615">#region Convert point to absolute screen position</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n143">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[       #region DragDrop Canvas

        private void CanvasCalibration_OnUIElementMoved(object sender, RoutedEventArgs e)
        {
            var replacePoint = e.OriginalSource as CalibrationPoint;
            var oldPoint = new CalibrationPoint(99, new Point(), 0, new SolidColorBrush(), 1);

            int index = 0;
            int foundIndex = 0;

            foreach (CalibrationPoint c in calibrationPoints)
            {
                if (replacePoint != null)
                    if (c.Number == replacePoint.Number)
                        foundIndex = index;

                index++;
            }

            calibrationPoints[foundIndex] = replacePoint;
            RecalibratePoint(calibrationPoints[foundIndex], new RoutedEventArgs());
        }

        #endregion
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.document">
          <y:Geometry height="164.82782669737227" width="100.0" x="3842.5020437076687" y="-289.9462648396184"/>
          <y:Fill color="#E5FFFF" color2="#E5FFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_width" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="36.1875" modelName="internal" modelPosition="c" textColor="#000000" visible="true" width="100.0" x="0.0" y="64.32016334868615">#region DragDrop Canvas</y:NodeLabel>
        </y:GenericNode>
      </data>
    </node>
    <node id="n144">
      <data key="d4"><![CDATA[NATIVE_CODE]]></data>
      <data key="d5"><![CDATA[}
]]></data>
      <data key="d6">
        <y:GenericNode configuration="com.yworks.flowchart.annotation">
          <y:Geometry height="209.43544653068696" width="69.0163836393408" x="4006.169365831001" y="-406.0904447337982"/>
          <y:Fill color="#FFFFFF" color2="#FFFFFF" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="node_size" configuration="CroppingLabel" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="209.43544653068696" modelName="custom" textColor="#000000" visible="true" width="69.0163836393408" x="4.547473508864641E-13" y="0.0">class<y:LabelModel>
              <y:SmartNodeLabelModel distance="4.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartNodeLabelModelParameter labelRatioX="0.0" labelRatioY="0.0" nodeRatioX="0.0" nodeRatioY="0.0" offsetX="0.0" offsetY="0.0" upX="0.0" upY="-1.0"/>
            </y:ModelParameter>
          </y:NodeLabel>
          <y:StyleProperties>
            <y:Property class="java.lang.Byte" name="com.yworks.flowchart.style.orientation" value="2"/>
            <y:Property class="java.lang.Byte" name="LAYER_STYLE_PROPERTY_KEY" value="1"/>
          </y:StyleProperties>
        </y:GenericNode>
      </data>
    </node>
    <edge id="e0" source="n2" target="n3">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dotted" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="4.0" x="23.06269108921731" y="27.50726151006188">
            <y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="28.0" distanceToCenter="false" position="right" ratio="0.61155977957683" segment="-1"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e1" source="n2" target="n11">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="9.79045117650412" ty="-190.4499024272326">
            <y:Point x="624.9989094498503" y="731.970483180302"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e2" source="n4" target="n5">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.6589728863973505" ty="-9.304419778243755"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e3" source="n1" target="n2">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e4" source="n13" target="n14">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="19.832483128820968" tx="0.6589728863973505" ty="-6.978314833682816"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e5" source="n27" target="n29">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.40039575609012" y="-0.3317856697165098">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e6" source="n27" target="n30">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="367.31688771597226" y="1769.9939085566969"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="24.8359375" x="10.118012986819565" y="-25.04043900071042">Нет<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="15.689865135532274" distanceToCenter="true" position="left" ratio="0.07744399050358496" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e7" source="n29" target="n28">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-9.094947017729282E-13" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e8" source="n30" target="n28">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="367.31688771597226" y="1869.5116277879958"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e9" source="n28" target="n26">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e10" source="n26" target="n24">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e11" source="n24" target="n22">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e12" source="n22" target="n45">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e13" source="n17" target="n20">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e14" source="n45" target="n31">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e15" source="n31" target="n32">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e16" source="n33" target="n35">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.40039575609012" y="1.4335725327223372">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e17" source="n33" target="n36">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="367.31688771597226" y="2188.6374326999976"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="24.8359375" x="8.290418381397728" y="-24.126672242199675">Нет<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="14.776067832822267" distanceToCenter="true" position="left" ratio="0.049735399716925754" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e18" source="n35" target="n34">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-9.094947017729282E-13" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e19" source="n36" target="n34">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="367.31688771597226" y="2284.3714930554943"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e20" source="n32" target="n37">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e21" source="n37" target="n33">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e22" source="n34" target="n48">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e23" source="n38" target="n39">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="-3.842817167163048"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e24" source="n39" target="n47">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.40039575609097" y="4.797806361384573">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e25" source="n51" target="n40">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-9.094947017729282E-13" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e26" source="n39" target="n62">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="395.71624255289623" y="2476.845728961808"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e27" source="n62" target="n40">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-1.2009098970847845" sy="2.9186467745275877" tx="0.0" ty="0.0">
            <y:Point x="395.71624255289646" y="2627.455678749995"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e28" source="n40" target="n19">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e29" source="n57" target="n60">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="398.54615531408865" y="2928.5006004925704"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e30" source="n25" target="n27">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.400395756090234" y="-0.33127612313978716">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e31" source="n23" target="n25">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e32" source="n21" target="n23">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.40039575609012" y="1.5206697869682557">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e33" source="n18" target="n21">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e34" source="n20" target="n18">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e35" source="n43" target="n44">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e36" source="n14" target="n53">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e37" source="n42" target="n43">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="none"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e38" source="n16" target="n42">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e39" source="n44" target="n17">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e40" source="n47" target="n51">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e41" source="n49" target="n50">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e42" source="n50" target="n38">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e43" source="n48" target="n49">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e44" source="n52" target="n16">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e45" source="n56" target="n57">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e46" source="n54" target="n59">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e47" source="n19" target="n58">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e48" source="n58" target="n54">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e49" source="n53" target="n52">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e50" source="n59" target="n61">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="2.7284841053187847E-12" ty="4.900040232750143"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" height="18.701171875" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="18.80078125" x="-39.40039575608819" y="16.328446878997056">Да<y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="0.0" distance="30.0" distanceToCenter="true" position="right" ratio="0.5" segment="0"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e51" source="n61" target="n60">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-9.094947017729282E-13" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e52" source="n59" target="n56">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="398.54615531408865" y="2796.084579727857"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e53" source="n60" target="n15">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e54" source="n11" target="n63">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-1.7295488234958611" sy="-189.84708545936564" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e55" source="n63" target="n65">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="17.04694787570702" sy="-31.755199629560025" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e56" source="n65" target="n66">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e57" source="n66" target="n4">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e58" source="n5" target="n6">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e59" source="n4" target="n67">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-11.214786023563192" ty="-17.253422247799563"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e60" source="n67" target="n64">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="39.52555432763461" sy="-19.863685753188747" tx="18.15484932467757" ty="72.89852462900365"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e61" source="n64" target="n12">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="2.559548888460995" ty="-192.39129723478004"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e62" source="n12" target="n7">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e63" source="n68" target="n69">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="1.2180502138280644" ty="20.33797874501306"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e64" source="n72" target="n73">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dotted" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="4.0" x="23.06262513335878" y="27.50726537431342">
            <y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="28.0" distanceToCenter="false" position="right" ratio="0.61155977957683" segment="-1"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e65" source="n72" target="n78">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="9.79045117650412" ty="-190.4499024272326">
            <y:Point x="3474.0734894900856" y="-1437.1006189124773"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e66" source="n74" target="n104">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e67" source="n78" target="n80">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-1.7295488234958611" sy="-189.84708545936564" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e68" source="n80" target="n82">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="17.04694787570702" sy="-31.755199629560025" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e69" source="n82" target="n106">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e70" source="n86" target="n83">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-11.214786023563192" ty="-17.253422247799563"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e71" source="n83" target="n81">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="39.52555432763461" sy="-19.863685753188747" tx="18.15484932467757" ty="72.89852462900365"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e72" source="n81" target="n79">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="2.559548888460995" ty="-192.39129723478004"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e73" source="n79" target="n77">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e74" source="n84" target="n85">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e75" source="n85" target="n75">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e76" source="n86" target="n103">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e77" source="n74" target="n86">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e78" source="n103" target="n105">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="4.9417057075012565"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e79" source="n69" target="n89">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e80" source="n107" target="n76">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e81" source="n92" target="n93">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dotted" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="4.0" x="23.062706652035786" y="27.50724813002222">
            <y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="28.0" distanceToCenter="false" position="right" ratio="0.61155977957683" segment="-1"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e82" source="n92" target="n96">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="9.79045117650412" ty="-190.4499024272326">
            <y:Point x="1864.462853235325" y="619.9440415776062"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e83" source="n91" target="n92">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e84" source="n96" target="n98">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-1.7295488234958611" sy="-189.84708545936564" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e85" source="n98" target="n100">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="17.04694787570702" sy="-31.755199629560025" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e86" source="n100" target="n94">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e87" source="n102" target="n101">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-11.214786023563192" ty="-17.253422247799563"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e88" source="n101" target="n99">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="39.52555432763461" sy="-19.863685753188747" tx="18.15484932467757" ty="72.89852462900365"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e89" source="n99" target="n97">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="2.559548888460995" ty="-192.39129723478004"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e90" source="n97" target="n95">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e91" source="n94" target="n102">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e92" source="n104" target="n107">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e93" source="n88" target="n88">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0">
            <y:Point x="4183.9007258670445" y="-1254.1973638578459"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e94" source="n105" target="n87">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e95" source="n106" target="n74">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e96" source="n110" target="n112">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="4.9417057075012565"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e97" source="n113" target="n108">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e98" source="n111" target="n113">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e99" source="n112" target="n109">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e100" source="n94" target="n111">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e101" source="n102" target="n110">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e102" source="n116" target="n117">
      <data key="d8"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="dotted" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:EdgeLabel alignment="center" configuration="AutoFlippingLabel" distance="2.0" fontFamily="Dialog" fontSize="12" fontStyle="plain" hasBackgroundColor="false" hasLineColor="false" hasText="false" height="4.0" modelName="custom" preferredPlacement="anywhere" ratio="0.5" textColor="#000000" visible="true" width="4.0" x="23.062662980637015" y="27.507273344960367">
            <y:LabelModel>
              <y:SmartEdgeLabelModel autoRotationEnabled="false" defaultAngle="0.0" defaultDistance="10.0"/>
            </y:LabelModel>
            <y:ModelParameter>
              <y:SmartEdgeLabelModelParameter angle="6.283185307179586" distance="28.0" distanceToCenter="false" position="right" ratio="0.61155977957683" segment="-1"/>
            </y:ModelParameter>
            <y:PreferredPlacementDescriptor angle="0.0" angleOffsetOnRightSide="0" angleReference="absolute" angleRotationOnRightSide="co" distance="-1.0" frozen="true" placement="anywhere" side="anywhere" sideReference="relative_to_edge_flow"/>
          </y:EdgeLabel>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e103" source="n116" target="n121">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="9.79045117650412" ty="-190.4499024272326">
            <y:Point x="1766.6855878842393" y="-340.9694463910496"/>
          </y:Path>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e104" source="n118" target="n129">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e105" source="n115" target="n116">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e106" source="n121" target="n123">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="-1.7295488234958611" sy="-189.84708545936564" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e107" source="n123" target="n124">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="17.04694787570702" sy="-31.755199629560025" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e108" source="n124" target="n131">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e109" source="n122" target="n120">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e110" source="n126" target="n128">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e111" source="n128" target="n130">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="4.9417057075012565"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e112" source="n129" target="n119">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e113" source="n130" target="n127">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e114" source="n131" target="n118">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e115" source="n118" target="n125">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="2.5403657462297815" ty="-30.092552506367838"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e116" source="n132" target="n134">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.65897288639826" sy="12.29238051280209" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e117" source="n134" target="n133">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e118" source="n126" target="n137">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="-2.7095483460893774" ty="-30.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e119" source="n125" target="n135">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="8.409018149362055" sy="-26.404937625841626" tx="-4.299245917843109" ty="-81.03010838481725"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e120" source="n132" target="n126">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e121" source="n135" target="n132">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="8.90522198920462" sy="-84.71772326534347" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e122" source="n137" target="n136">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="32.50236607270426" sy="-21.91089581712339" tx="0.8888894472770517" ty="-76.62861908246686"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e123" source="n136" target="n138">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="6.757541850409325" sy="-77.36220063285839" tx="-5.655547194648989" ty="-55.058390716201075"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e124" source="n138" target="n139">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e125" source="n112" target="n126">
      <data key="d8"><![CDATA[REF]]></data>
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#C0C0C0" type="dashed" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e126" source="n139" target="n140">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e127" source="n140" target="n141">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e128" source="n141" target="n142">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e129" source="n142" target="n143">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e130" source="n143" target="n144">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
    <edge id="e131" source="n144" target="n122">
      <data key="d9"/>
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>
  </graph>
  <data key="d0">
    <y:Resources>
      <y:Resource id="1">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!-- Generator: Adobe Illustrator 15.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --&gt;
&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"&gt;
&lt;svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 width="57px" height="65px" viewBox="0 0 57 65" enable-background="new 0 0 57 65" xml:space="preserve"&gt;
&lt;g&gt;
	
		&lt;linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="26.3398" y1="3115.7266" x2="27.5807" y2="3145.5239" gradientTransform="matrix(1 0 0 1 0.3203 -3091.7656)"&gt;
		&lt;stop  offset="0.2711" style="stop-color:#FFAB4F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFD28F"/&gt;
	&lt;/linearGradient&gt;
	&lt;path fill="url(#SVGID_1_)" stroke="#ED9135" stroke-miterlimit="10" d="M49.529,51.225c-4.396-4.396-10.951-5.884-12.063-6.109
		V37.8H19.278c0,0,0.038,6.903,0,6.868c0,0-6.874,0.997-12.308,6.432C1.378,56.691,0.5,62.77,0.5,62.77
		c0,1.938,1.575,3.492,3.523,3.492h48.51c1.947,0,3.521-1.558,3.521-3.492C56.055,62.768,54.211,55.906,49.529,51.225z"/&gt;
	&lt;path id="body_18_" fill="#ECECEC" stroke="#9B9B9B" stroke-miterlimit="10" d="M0.5,62.768c0,1.938,1.575,3.494,3.523,3.494h48.51
		c1.947,0,3.521-1.559,3.521-3.494c0,0-1.844-6.861-6.525-11.543c-4.815-4.813-11.244-6.146-11.244-6.146
		c-1.771,1.655-5.61,3.802-10.063,3.802c-4.453,0-8.292-2.146-10.063-3.802c0,0-5.755,0.586-11.189,6.021
		C1.378,56.689,0.5,62.768,0.5,62.768z"/&gt;
	
		&lt;radialGradient id="SVGID_2_" cx="22.6621" cy="21.707" r="17.7954" gradientTransform="matrix(1 0 0 -1 0.04 64.1543)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_2_)" stroke="#E55E03" d="M28.106,33.486c-8.112,0-12.688,4.313-12.688,10.438
		c0,7.422,12.688,10.438,12.688,10.438s14.688-3.016,14.688-10.438C42.793,38.75,36.215,33.486,28.106,33.486z M26.288,53.051
		c0,0-7.135-2.093-8.805-7.201c-0.222-0.682,0.147-1.156,0.795-1.521V37.8h20.188v6.663c0.235,0.352,1.109,0.737,1.229,1.387
		C40.445,49.917,26.288,53.051,26.288,53.051z"/&gt;
	
		&lt;radialGradient id="SVGID_3_" cx="15.2056" cy="831.1875" r="32.3071" gradientTransform="matrix(1 0 0 1 0.0801 -773.6914)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_3_)" stroke="#E55E03" d="M49.529,51.225c-2.239-2.24-5.041-3.724-7.396-4.67
		c-2.854,5.51-14.021,7.807-14.021,7.807s-10.472-2.483-12.387-8.514c-2.439,0.771-5.787,2.287-8.749,5.25
		c-5.592,5.592-6.47,11.67-6.47,11.67c0,1.938,1.575,3.492,3.523,3.492h48.51c1.946,0,3.521-1.558,3.521-3.492
		C56.055,62.768,54.211,55.906,49.529,51.225z"/&gt;
	
		&lt;radialGradient id="SVGID_4_" cx="17.0723" cy="18.4907" r="11.8931" gradientTransform="matrix(1 0 0 -1 0.04 64.1543)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_4_)" stroke="#E55E03" d="M13.404,44.173c1.15-1.81,2.039-3.832,3.332-5.397
		c-0.514,1.027-1.669,4.084-1.669,5.148c0,5.186,10.366,9.079,14.688,10.438c-3.472,1.627-9.134-1.498-11.334-2.359
		c-3.601-1.419-4.071-3.063-5.89-4.854C12.523,47.135,12.878,45,13.404,44.173z"/&gt;
	
		&lt;radialGradient id="SVGID_5_" cx="31.8184" cy="19.3525" r="14.63" gradientTransform="matrix(1 0 0 -1 0.04 64.1543)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_5_)" stroke="#E55E03" d="M45.777,43.924c-1.317-1.568-5.11-9.424-6.604-6.617
		c0.516,1.025,3.617,3.693,3.617,6.617c0,5.186-10.271,8.576-16.699,9.145c1.429,4.938,11.373,1.293,13.805-0.313
		c3.563-2.354,4.563-5.133,7.854-3.705C47.754,49.045,48.006,46.574,45.777,43.924z"/&gt;
	
		&lt;radialGradient id="SVGID_6_" cx="30.4893" cy="4.8721" r="5.2028" gradientTransform="matrix(1 0 0 -1 0.04 64.1543)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_6_)" stroke="#E55E03" d="M30.777,54.167c0.357,0.836-0.153,1.983-0.352,2.813
		c-0.256,1.084-0.072,2.104,0.102,3.186c0.164,1.02,0.156,2.107,0.25,3.167c0.082,0.916,0.482,1.849,0.357,2.75"/&gt;
	
		&lt;radialGradient id="SVGID_7_" cx="23.2871" cy="5.3008" r="5.5143" gradientTransform="matrix(1 0 0 -1 0.04 64.1543)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FCB57A"/&gt;
		&lt;stop  offset="1" style="stop-color:#FF8C36"/&gt;
	&lt;/radialGradient&gt;
	&lt;path fill="url(#SVGID_7_)" stroke="#E55E03" d="M23.695,53.417c-0.508,0.584-0.476,2.209-0.398,3
		c0.116,1.183,0.456,2.099,0.333,3.333c-0.192,1.943,0.154,4.479-0.436,6.333"/&gt;
	
		&lt;radialGradient id="face_x5F_white_1_" cx="27.5835" cy="3117.4922" r="23.425" fx="23.0139" fy="3115.0024" gradientTransform="matrix(1 0 0 1 0.3203 -3091.7656)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FFD28F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFAB4F"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="face_x5F_white_3_" fill="url(#face_x5F_white_1_)" stroke="#ED9135" stroke-miterlimit="10" d="M43.676,23.357
		c0.086,10.2-6.738,18.52-15.25,18.586c-8.5,0.068-15.464-8.146-15.55-18.344C12.794,13.4,19.618,5.079,28.123,5.012
		C36.627,4.945,43.59,13.158,43.676,23.357z"/&gt;
	
		&lt;linearGradient id="face_highlight_1_" gradientUnits="userSpaceOnUse" x1="6468.501" y1="-12291.5195" x2="6492.1304" y2="-12384.9688" gradientTransform="matrix(0.275 0 0 -0.2733 -1752.8849 -3351.7349)"&gt;
		&lt;stop  offset="0" style="stop-color:#FFFFFF;stop-opacity:0.24"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFFFFF;stop-opacity:0.16"/&gt;
	&lt;/linearGradient&gt;
	&lt;path id="face_highlight_3_" fill="url(#face_highlight_1_)" d="M28.415,5.625c-6.035,0.047-10.747,4.493-12.787,10.386
		c-0.664,1.919-0.294,4.043,0.98,5.629c2.73,3.398,5.729,6.283,9.461,8.088c3.137,1.518,7.535,2.385,11.893,1.247
		c2.274-0.592,3.988-2.459,4.375-4.766c0.187-1.094,0.293-2.289,0.283-3.553C42.54,13.244,36.729,5.56,28.415,5.625z"/&gt;
	&lt;path id="Hair_Young_Black_1_" fill="#5C5C5C" stroke="#353535" stroke-linecap="round" stroke-linejoin="round" d="M20.278,13.25
		c3.417,4.333,9.333,6.917,9.333,6.917l-1.417-3.5c0,0,7.094,4.691,8.083,4.333c0.968-0.2-1.082-3.807-1.082-3.807
		s3.138,1.795,4.854,3.969c1.803,2.28,4.285,3.504,4.285,3.504S47.027,2.719,27.289,2.744C8.278,2.709,12.058,27.678,12.058,27.678
		L14.695,17c0,0,0.914,5.757,1.399,4.875C17.861,15.211,18.861,11.5,20.278,13.25z"/&gt;
&lt;/g&gt;
&lt;/svg&gt;
</y:Resource>
      <y:Resource id="2">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!-- Generator: Adobe Illustrator 15.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --&gt;
&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"&gt;
&lt;svg version="1.1" id="Ebene_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 width="59px" height="34px" viewBox="0 0 59 34" enable-background="new 0 0 59 34" xml:space="preserve"&gt;
&lt;g&gt;
	
		&lt;linearGradient id="neck_x5F_white_1_" gradientUnits="userSpaceOnUse" x1="13.4722" y1="-3073.124" x2="14.2016" y2="-3090.6384" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)"&gt;
		&lt;stop  offset="0.2711" style="stop-color:#FFAB4F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFD28F"/&gt;
	&lt;/linearGradient&gt;
	&lt;path id="neck_x5F_white_7_" fill="url(#neck_x5F_white_1_)" stroke="#FFAB4F" stroke-width="0.5" stroke-miterlimit="10" d="
		M9.639,18.898h9.094v10.115c-0.658,0.187-8.587,0.219-9.094,0.086V18.898z"/&gt;
	
		&lt;linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="12.9697" y1="-3069.5903" x2="13.5902" y2="-3084.491" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)"&gt;
		&lt;stop  offset="0.2711" style="stop-color:#FFAB4F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFD28F"/&gt;
	&lt;/linearGradient&gt;
	&lt;path fill="url(#SVGID_1_)" stroke="#ED9135" stroke-width="0.5" stroke-miterlimit="10" d="M24.765,25.611
		c-2.197-2.196-5.476-2.94-6.031-3.055v-3.658H9.639c0,0,0.019,3.453,0,3.436c0,0-3.437,0.499-6.154,3.216
		c-2.796,2.796-3.235,5.835-3.235,5.835c0,0.971,0.788,1.746,1.762,1.746h24.255c0.975,0,1.762-0.777,1.762-1.746
		C28.028,31.384,27.106,27.953,24.765,25.611z"/&gt;
	
		&lt;radialGradient id="face_x5F_white_1_" cx="13.5923" cy="-3070.4746" r="11.713" fx="11.3074" fy="-3071.7195" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FFD28F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFAB4F"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="face_x5F_white_7_" fill="url(#face_x5F_white_1_)" stroke="#ED9135" stroke-width="0.5" stroke-miterlimit="10" d="
		M21.839,11.679c0.043,5.1-3.369,9.26-7.626,9.293c-4.25,0.033-7.731-4.074-7.774-9.173C6.398,6.7,9.81,2.54,14.062,2.506
		C18.313,2.473,21.796,6.579,21.839,11.679z"/&gt;
	
		&lt;linearGradient id="face_highlight_1_" gradientUnits="userSpaceOnUse" x1="7121.4932" y1="14261.8359" x2="7133.3081" y2="14308.5615" gradientTransform="matrix(0.275 0 0 0.2733 -1945.4338 -3893.9907)"&gt;
		&lt;stop  offset="0" style="stop-color:#FFFFFF;stop-opacity:0.24"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFFFFF;stop-opacity:0.16"/&gt;
	&lt;/linearGradient&gt;
	&lt;path id="face_highlight_7_" fill="url(#face_highlight_1_)" d="M14.208,2.813C11.19,2.835,8.834,5.059,7.814,8.006
		c-0.332,0.959-0.147,2.021,0.49,2.814c1.365,1.699,2.865,3.141,4.73,4.044c1.568,0.759,3.767,1.192,5.947,0.623
		c1.137-0.296,1.994-1.229,2.188-2.383c0.094-0.547,0.146-1.145,0.141-1.776C21.271,6.622,18.364,2.78,14.208,2.813z"/&gt;
	
		&lt;path id="hair_x5F_gray_6_" fill="#CC9869" stroke="#99724F" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" d="
		M10.139,6.625c0,0,2.661,3.625,7.5,1.875c1.363-0.281,4.527,0.518,4.527,0.518s-1.826-8.085-8.522-7.646
		c-8.943,0.69-7.615,11.467-7.615,11.467s1.384-0.342,2.518-2.401C9.034,9.553,10.139,6.625,10.139,6.625z"/&gt;
	
		&lt;radialGradient id="collar_x5F_body_1_" cx="7.2808" cy="-3086.1948" r="16.2006" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#B0E8FF"/&gt;
		&lt;stop  offset="1" style="stop-color:#74AEEE"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="collar_x5F_body_7_" fill="url(#collar_x5F_body_1_)" stroke="#5491CF" stroke-width="0.5" d="M0.25,31.384
		c0,0.97,0.788,1.747,1.762,1.747h24.255c0.975,0,1.762-0.779,1.762-1.747c0,0-0.922-3.431-3.264-5.771
		c-2.408-2.406-5.622-3.072-5.622-3.072c-0.886,0.827-2.806,1.4-5.031,1.4c-2.227,0-4.146-0.573-5.032-1.4
		c0,0-2.877,0.293-5.594,3.01C0.689,28.346,0.25,31.384,0.25,31.384z"/&gt;
	
		&lt;radialGradient id="collar_x5F_r_1_" cx="15.4497" cy="-3081.2578" r="4.6415" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#80CCFF"/&gt;
		&lt;stop  offset="1" style="stop-color:#74AEEE"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="collar_x5F_r_7_" fill="url(#collar_x5F_r_1_)" stroke="#5491CF" stroke-width="0.5" d="M19.079,20.689
		c0,0-0.287,1.186-1.506,2.222c-1.055,0.897-2.892,1.036-2.892,1.036l1.987,3.107c0,0,1.479-0.818,2.504-1.924
		c0.961-1.035,0.686-2.74,0.686-2.74L19.079,20.689z"/&gt;
	
		&lt;radialGradient id="collar_x5F_l_1_" cx="9.2686" cy="-3081.2778" r="4.6425" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#80CCFF"/&gt;
		&lt;stop  offset="1" style="stop-color:#74AEEE"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="collar_x5F_l_7_" fill="url(#collar_x5F_l_1_)" stroke="#5491CF" stroke-width="0.5" d="M9.315,20.711
		c0,0,0.288,1.186,1.506,2.221c1.055,0.896,2.893,1.037,2.893,1.037l-1.987,3.107c0,0-1.479-0.818-2.503-1.926
		c-0.961-1.035-0.685-2.739-0.685-2.739L9.315,20.711z"/&gt;
	
		&lt;radialGradient id="Knob2_1_" cx="13.6846" cy="-2313.0259" r="0.4838" gradientTransform="matrix(1 0 0 -1 0.2803 -2284.9199)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#80CCFF"/&gt;
		&lt;stop  offset="1" style="stop-color:#74AEEE"/&gt;
	&lt;/radialGradient&gt;
	&lt;circle id="Knob2_7_" fill="url(#Knob2_1_)" stroke="#5491CF" stroke-width="0.5" cx="14.129" cy="28.127" r="0.292"/&gt;
	
		&lt;radialGradient id="Knob1_1_" cx="13.7036" cy="-2316.1479" r="0.4836" gradientTransform="matrix(1 0 0 -1 0.2803 -2284.9199)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#80CCFF"/&gt;
		&lt;stop  offset="1" style="stop-color:#74AEEE"/&gt;
	&lt;/radialGradient&gt;
	&lt;circle id="Knob1_7_" fill="url(#Knob1_1_)" stroke="#5491CF" stroke-width="0.5" cx="14.148" cy="31.25" r="0.292"/&gt;
	&lt;path id="path5135_10_" fill="#D54A30" stroke="#B51A19" stroke-width="0.5" d="M13.722,27.615c0,0-0.926,1.027-1.041,3.271
		c-0.115,2.243,0,2.243,0,2.243h3.273c0,0,0.115,0.031-0.078-2.185c-0.199-2.301-1.193-3.334-1.193-3.334L13.722,27.615
		L13.722,27.615z"/&gt;
	&lt;path id="path5131_10_" fill="#D54A30" stroke="#B51A19" stroke-width="0.5" d="M14.163,24.344h0.063l1.276,2.002
		c0.258,0.477-0.604,0.898-0.729,1.273l-1.14-0.01c-0.121-0.379-1.13-0.685-0.738-1.291L14.163,24.344z"/&gt;
	&lt;polygon fill="#353535" stroke="#353535" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" points="
		52.225,22.842 36.594,25.037 36.139,13.559 51.746,13.873 	"/&gt;
	
		&lt;linearGradient id="neck_x5F_white_2_" gradientUnits="userSpaceOnUse" x1="43.3594" y1="-3073.1235" x2="44.0888" y2="-3090.6387" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)"&gt;
		&lt;stop  offset="0.2711" style="stop-color:#FFAB4F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFD28F"/&gt;
	&lt;/linearGradient&gt;
	&lt;path id="neck_x5F_white_5_" fill="url(#neck_x5F_white_2_)" stroke="#FFAB4F" stroke-width="0.5" stroke-miterlimit="10" d="
		M39.525,18.898h9.096v10.115c-0.658,0.187-8.587,0.219-9.096,0.086V18.898z"/&gt;
	
		&lt;linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="42.8584" y1="-3069.5903" x2="43.4789" y2="-3084.491" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)"&gt;
		&lt;stop  offset="0.2711" style="stop-color:#FFAB4F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFD28F"/&gt;
	&lt;/linearGradient&gt;
	&lt;path fill="url(#SVGID_2_)" stroke="#ED9135" stroke-width="0.5" stroke-miterlimit="10" d="M54.652,25.611
		c-2.197-2.196-5.477-2.94-6.031-3.055v-3.658h-9.096c0,0,0.021,3.453,0,3.436c0,0-3.437,0.499-6.152,3.216
		c-2.796,2.796-3.234,5.835-3.234,5.835c0,0.971,0.786,1.746,1.762,1.746h24.254c0.976,0,1.763-0.777,1.763-1.746
		C57.916,31.384,56.994,27.953,54.652,25.611z"/&gt;
	
		&lt;radialGradient id="face_x5F_white_2_" cx="43.4795" cy="-3070.4746" r="11.7123" fx="41.1947" fy="-3071.7195" gradientTransform="matrix(1 0 0 -1 0.3604 -3057.6113)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FFD28F"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFAB4F"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="face_x5F_white_5_" fill="url(#face_x5F_white_2_)" stroke="#ED9135" stroke-width="0.5" stroke-miterlimit="10" d="
		M51.727,11.679c0.043,5.1-3.369,9.26-7.625,9.293c-4.25,0.033-7.731-4.074-7.774-9.173c-0.041-5.1,3.37-9.26,7.623-9.294
		C48.201,2.473,51.684,6.579,51.727,11.679z"/&gt;
	
		&lt;linearGradient id="face_highlight_2_" gradientUnits="userSpaceOnUse" x1="7230.1748" y1="14261.8359" x2="7241.9893" y2="14308.5596" gradientTransform="matrix(0.275 0 0 0.2733 -1945.4338 -3893.9907)"&gt;
		&lt;stop  offset="0" style="stop-color:#FFFFFF;stop-opacity:0.24"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFFFFF;stop-opacity:0.16"/&gt;
	&lt;/linearGradient&gt;
	&lt;path id="face_highlight_5_" fill="url(#face_highlight_2_)" d="M44.096,2.813c-3.018,0.023-5.373,2.247-6.394,5.193
		c-0.332,0.959-0.147,2.021,0.489,2.814c1.365,1.699,2.865,3.141,4.73,4.044c1.568,0.759,3.768,1.192,5.946,0.623
		c1.137-0.296,1.993-1.229,2.188-2.383c0.094-0.547,0.146-1.145,0.141-1.776C51.158,6.622,48.252,2.78,44.096,2.813z"/&gt;
	&lt;path fill="#5C5C5C" stroke="#353535" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" d="M38.688,21.917
		c-0.207-1.509-0.308-2.506-0.396-3.933c-0.287-4.673,1.442-8.859,1.442-8.859l0.44-1.039l0.47,1.209l0.938-2.478l-0.023,2.276
		l0.654-0.374l0.352-0.827L42.745,9l0.526-0.494l1.065-0.364L44.809,8.5l0.238-1.188l0.417,1.277l0.563-0.513l0.84-0.106L47.4,8.656
		l-0.121-2.123l0.941,1.984L48.693,8.5c0,0,3.014,4.974,1.875,14.213c1.076,0.381,2.24,1.344,3.438,2.324
		c0.001-0.001,0.007-0.006,0.007-0.006L51.943,9.69c-0.517-3.253-2.68-8.39-7.69-8.366c-11.789-0.04-7.853,19.704-9.894,23.343
		c-0.004,0.007-0.006,0.013-0.01,0.021C36.034,23.363,37.714,22.173,38.688,21.917z"/&gt;
	
		&lt;radialGradient id="body_1_" cx="77.0439" cy="3984.6543" r="16.4227" gradientTransform="matrix(0.9852 0 0 0.9852 -38.3758 -3898.4966)" gradientUnits="userSpaceOnUse"&gt;
		&lt;stop  offset="0" style="stop-color:#FFC373"/&gt;
		&lt;stop  offset="1" style="stop-color:#FFB448"/&gt;
	&lt;/radialGradient&gt;
	&lt;path id="body_21_" fill="url(#body_1_)" stroke="#ED8D00" stroke-width="0.5" d="M30.139,31.384c0,0.97,0.786,1.747,1.762,1.747
		h24.254c0.976,0,1.763-0.779,1.763-1.747c0,0-0.922-3.431-3.265-5.771c-2.407-2.406-4.121-2.572-4.121-2.572
		c-0.723,3.49-4.276,4.393-6.504,4.393s-5.66-1.32-5.971-4.72c0,0-2.279,0.601-4.684,2.837
		C30.577,28.346,30.139,31.384,30.139,31.384z"/&gt;
&lt;/g&gt;
&lt;/svg&gt;
</y:Resource>
    </y:Resources>
  </data>
</graphml>
