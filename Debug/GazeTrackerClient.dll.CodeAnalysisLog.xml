<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="e:\msvc\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="E:\EYE\ITUGazeTracker\gazetrackinglib-code-564-trunk\Debug\GazeTrackerClient.dll">
   <Modules>
    <Module Name="gazetrackerclient.dll">
     <Namespaces>
      <Namespace Name="GazeTrackerClient">
       <Types>
        <Type Name="Calibration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnAbort" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.AbortHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.AbortHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnCheckLevel" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.CheckLevelHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.CheckLevelHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnEnd" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.EndHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.EndHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnParameters" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.ParametersHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.ParametersHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPointChange" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.PointChangeHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.PointChangeHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnQuality" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.QualityHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.QualityHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStart" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.StartHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.StartHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnValidate" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Calibration.ValidateHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Calibration.ValidateHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'Calibration.ValidateHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Client" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Client' because it creates members of the following IDisposable types: 'Socket', 'TcpClient'. If 'Client' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ClientConnectionChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Client.ConnectHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GazeData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnFixation" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'GazeData.FixationHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'GazeData.FixationHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnGazeData" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'GazeData.GazeDataHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'GazeData.GazeDataHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnSmoothedGazeData" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'GazeData.GazeDataSmoothHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'GazeData.GazeDataSmoothHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Log" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPathChange" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Log.PathChangeHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Log.PathChangeHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStart" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Log.StartHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Log.StartHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStop" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Log.StopHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Log.StopHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MouseControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMessageExtraInfo()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'MouseControl.GetMessageExtraInfo()' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendInput(System.UInt32,GazeTrackerClient.MouseControl+INPUT[],System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'MouseControl.SendInput(uint, MouseControl.INPUT[], int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MouseControl+INPUT" Kind="Struct" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message Id="dwExtraInfo" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'MouseControl.KEYBDINPUT' contains the following non-portable fields: 'MouseControl.KEYBDINPUT.dwExtraInfo'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'MouseControl.MOUSEINPUT' contains the following non-portable fields: 'MouseControl.MOUSEINPUT.dwExtraInfo'.</Issue>
          </Message>
          <Message Id="hi" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'MouseControl.INPUT' contains the following non-portable fields: 'MouseControl.INPUT.hi'.</Issue>
          </Message>
          <Message Id="ki" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'MouseControl.INPUT' contains the following non-portable fields: 'MouseControl.INPUT.ki'.</Issue>
          </Message>
          <Message Id="mi" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'MouseControl.INPUT' contains the following non-portable fields: 'MouseControl.INPUT.mi'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Settings' because it creates members of the following IDisposable types: 'XmlTextWriter'. If 'Settings' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Stream" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnGazeData" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Stream.DataHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Stream.DataHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStreamFormat" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Stream.FormatHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Stream.FormatHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStreamStart" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Stream.StartHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Stream.StartHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnStreamStop" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-02-18 06:26:36Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'Stream.StopHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'Stream.StopHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Resolution Name="TooMany">Remove all but the first two parameters of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900">
   <Name>Value type fields should be portable</Name>
   <Description>Structures with explicit layout containing misaligned fields cause crashes on 64-bit platforms.</Description>
   <Resolution Name="Default">Structure {0} contains the following non-portable fields: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182285(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="portabilityrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
